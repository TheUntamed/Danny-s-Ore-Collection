package com.danny.dannys_ores.init;

import com.danny.dannys_ores.Main;
import com.danny.dannys_ores.blocks.BaseBlock;
import com.danny.dannys_ores.blocks.BedrockOreWithXpDrop;
import com.danny.dannys_ores.blocks.OreWithXpDrop;
import com.danny.dannys_ores.materials.MyMaterials;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraftforge.common.ToolType;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = Main.MOD_ID, bus = Mod.EventBusSubscriber.Bus.MOD)
public class BlockInitXpDrop extends BlockInit {

    public static final RegistryObject<Block> STONE_ELECTRONITE_ORE = BLOCKS.register("stone_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_ELECTRONITE_ORE = BLOCKS.register("andesite_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_ELECTRONITE_ORE = BLOCKS.register("diorite_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_ELECTRONITE_ORE = BLOCKS.register("granite_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_ELECTRONITE_ORE = BLOCKS.register("netherrack_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_ELECTRONITE_ORE = BLOCKS.register("end_stone_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_ELECTRONITE_ORE = BLOCKS.register("sand_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_ELECTRONITE_ORE = BLOCKS.register("red_sand_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_ELECTRONITE_ORE = BLOCKS.register("gravel_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_ELECTRONITE_ORE = BLOCKS.register("sandstone_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_ELECTRONITE_ORE = BLOCKS.register("red_sandstone_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_ELECTRONITE_ORE = BLOCKS.register("blue_ice_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_ELECTRONITE_ORE = BLOCKS.register("packed_ice_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_ELECTRONITE_ORE = BLOCKS.register("bedrock_electronite_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_ELECTRONITE_ORE = BLOCKS.register("quark_basalt_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_ELECTRONITE_ORE = BLOCKS.register("quark_jasper_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_ELECTRONITE_ORE = BLOCKS.register("quark_limestone_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_ELECTRONITE_ORE = BLOCKS.register("quark_marble_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_ELECTRONITE_ORE = BLOCKS.register("quark_slate_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_ELECTRONITE_ORE = BLOCKS.register("embellishcraft_basalt_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_ELECTRONITE_ORE = BLOCKS.register("embellishcraft_jade_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_ELECTRONITE_ORE = BLOCKS.register("embellishcraft_gneiss_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_ELECTRONITE_ORE = BLOCKS.register("embellishcraft_marble_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_ELECTRONITE_ORE = BLOCKS.register("embellishcraft_larvikite_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_ELECTRONITE_ORE = BLOCKS.register("embellishcraft_slate_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_ELECTRONITE_ORE = BLOCKS.register("hardened_stone_electronite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_IMPERIUM_ORE = BLOCKS.register("stone_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_IMPERIUM_ORE = BLOCKS.register("andesite_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_IMPERIUM_ORE = BLOCKS.register("diorite_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_IMPERIUM_ORE = BLOCKS.register("granite_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_IMPERIUM_ORE = BLOCKS.register("netherrack_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_IMPERIUM_ORE = BLOCKS.register("end_stone_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_IMPERIUM_ORE = BLOCKS.register("sand_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_IMPERIUM_ORE = BLOCKS.register("red_sand_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_IMPERIUM_ORE = BLOCKS.register("gravel_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_IMPERIUM_ORE = BLOCKS.register("sandstone_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_IMPERIUM_ORE = BLOCKS.register("red_sandstone_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_IMPERIUM_ORE = BLOCKS.register("blue_ice_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_IMPERIUM_ORE = BLOCKS.register("packed_ice_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_IMPERIUM_ORE = BLOCKS.register("bedrock_imperium_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_IMPERIUM_ORE = BLOCKS.register("quark_basalt_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_IMPERIUM_ORE = BLOCKS.register("quark_jasper_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_IMPERIUM_ORE = BLOCKS.register("quark_limestone_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_IMPERIUM_ORE = BLOCKS.register("quark_marble_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_IMPERIUM_ORE = BLOCKS.register("quark_slate_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_IMPERIUM_ORE = BLOCKS.register("embellishcraft_basalt_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_IMPERIUM_ORE = BLOCKS.register("embellishcraft_jade_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_IMPERIUM_ORE = BLOCKS.register("embellishcraft_gneiss_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_IMPERIUM_ORE = BLOCKS.register("embellishcraft_marble_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_IMPERIUM_ORE = BLOCKS.register("embellishcraft_larvikite_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_IMPERIUM_ORE = BLOCKS.register("embellishcraft_slate_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_IMPERIUM_ORE = BLOCKS.register("hardened_stone_imperium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_INFERIUM_ORE = BLOCKS.register("stone_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_INFERIUM_ORE = BLOCKS.register("andesite_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_INFERIUM_ORE = BLOCKS.register("diorite_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_INFERIUM_ORE = BLOCKS.register("granite_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_INFERIUM_ORE = BLOCKS.register("netherrack_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_INFERIUM_ORE = BLOCKS.register("end_stone_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_INFERIUM_ORE = BLOCKS.register("sand_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_INFERIUM_ORE = BLOCKS.register("red_sand_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_INFERIUM_ORE = BLOCKS.register("gravel_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_INFERIUM_ORE = BLOCKS.register("sandstone_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_INFERIUM_ORE = BLOCKS.register("red_sandstone_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_INFERIUM_ORE = BLOCKS.register("blue_ice_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_INFERIUM_ORE = BLOCKS.register("packed_ice_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_INFERIUM_ORE = BLOCKS.register("bedrock_inferium_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_INFERIUM_ORE = BLOCKS.register("quark_basalt_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_INFERIUM_ORE = BLOCKS.register("quark_jasper_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_INFERIUM_ORE = BLOCKS.register("quark_limestone_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_INFERIUM_ORE = BLOCKS.register("quark_marble_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_INFERIUM_ORE = BLOCKS.register("quark_slate_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_INFERIUM_ORE = BLOCKS.register("embellishcraft_basalt_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_INFERIUM_ORE = BLOCKS.register("embellishcraft_jade_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_INFERIUM_ORE = BLOCKS.register("embellishcraft_gneiss_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_INFERIUM_ORE = BLOCKS.register("embellishcraft_marble_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_INFERIUM_ORE = BLOCKS.register("embellishcraft_larvikite_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_INFERIUM_ORE = BLOCKS.register("embellishcraft_slate_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_INFERIUM_ORE = BLOCKS.register("hardened_stone_inferium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_INSANIUM_ORE = BLOCKS.register("stone_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_INSANIUM_ORE = BLOCKS.register("andesite_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_INSANIUM_ORE = BLOCKS.register("diorite_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_INSANIUM_ORE = BLOCKS.register("granite_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_INSANIUM_ORE = BLOCKS.register("netherrack_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_INSANIUM_ORE = BLOCKS.register("end_stone_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_INSANIUM_ORE = BLOCKS.register("sand_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_INSANIUM_ORE = BLOCKS.register("red_sand_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_INSANIUM_ORE = BLOCKS.register("gravel_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_INSANIUM_ORE = BLOCKS.register("sandstone_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_INSANIUM_ORE = BLOCKS.register("red_sandstone_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_INSANIUM_ORE = BLOCKS.register("blue_ice_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_INSANIUM_ORE = BLOCKS.register("packed_ice_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_INSANIUM_ORE = BLOCKS.register("bedrock_insanium_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_INSANIUM_ORE = BLOCKS.register("quark_basalt_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_INSANIUM_ORE = BLOCKS.register("quark_jasper_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_INSANIUM_ORE = BLOCKS.register("quark_limestone_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_INSANIUM_ORE = BLOCKS.register("quark_marble_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_INSANIUM_ORE = BLOCKS.register("quark_slate_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_INSANIUM_ORE = BLOCKS.register("embellishcraft_basalt_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_INSANIUM_ORE = BLOCKS.register("embellishcraft_jade_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_INSANIUM_ORE = BLOCKS.register("embellishcraft_gneiss_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_INSANIUM_ORE = BLOCKS.register("embellishcraft_marble_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_INSANIUM_ORE = BLOCKS.register("embellishcraft_larvikite_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_INSANIUM_ORE = BLOCKS.register("embellishcraft_slate_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_INSANIUM_ORE = BLOCKS.register("hardened_stone_insanium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(5).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_PERIDOT_ORE = BLOCKS.register("stone_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_PERIDOT_ORE = BLOCKS.register("andesite_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_PERIDOT_ORE = BLOCKS.register("diorite_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_PERIDOT_ORE = BLOCKS.register("granite_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_PERIDOT_ORE = BLOCKS.register("netherrack_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_PERIDOT_ORE = BLOCKS.register("end_stone_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_PERIDOT_ORE = BLOCKS.register("sand_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_PERIDOT_ORE = BLOCKS.register("red_sand_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_PERIDOT_ORE = BLOCKS.register("gravel_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_PERIDOT_ORE = BLOCKS.register("sandstone_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_PERIDOT_ORE = BLOCKS.register("red_sandstone_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_PERIDOT_ORE = BLOCKS.register("blue_ice_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_PERIDOT_ORE = BLOCKS.register("packed_ice_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_PERIDOT_ORE = BLOCKS.register("bedrock_peridot_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_PERIDOT_ORE = BLOCKS.register("quark_basalt_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_PERIDOT_ORE = BLOCKS.register("quark_jasper_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_PERIDOT_ORE = BLOCKS.register("quark_limestone_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_PERIDOT_ORE = BLOCKS.register("quark_marble_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_PERIDOT_ORE = BLOCKS.register("quark_slate_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_PERIDOT_ORE = BLOCKS.register("embellishcraft_basalt_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_PERIDOT_ORE = BLOCKS.register("embellishcraft_jade_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_PERIDOT_ORE = BLOCKS.register("embellishcraft_gneiss_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_PERIDOT_ORE = BLOCKS.register("embellishcraft_marble_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_PERIDOT_ORE = BLOCKS.register("embellishcraft_larvikite_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_PERIDOT_ORE = BLOCKS.register("embellishcraft_slate_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_PERIDOT_ORE = BLOCKS.register("hardened_stone_peridot_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_PROSPERITY_ORE = BLOCKS.register("stone_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_PROSPERITY_ORE = BLOCKS.register("andesite_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_PROSPERITY_ORE = BLOCKS.register("diorite_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_PROSPERITY_ORE = BLOCKS.register("granite_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_PROSPERITY_ORE = BLOCKS.register("netherrack_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_PROSPERITY_ORE = BLOCKS.register("end_stone_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_PROSPERITY_ORE = BLOCKS.register("sand_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_PROSPERITY_ORE = BLOCKS.register("red_sand_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_PROSPERITY_ORE = BLOCKS.register("gravel_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_PROSPERITY_ORE = BLOCKS.register("sandstone_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_PROSPERITY_ORE = BLOCKS.register("red_sandstone_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_PROSPERITY_ORE = BLOCKS.register("blue_ice_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_PROSPERITY_ORE = BLOCKS.register("packed_ice_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_PROSPERITY_ORE = BLOCKS.register("bedrock_prosperity_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_PROSPERITY_ORE = BLOCKS.register("quark_basalt_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_PROSPERITY_ORE = BLOCKS.register("quark_jasper_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_PROSPERITY_ORE = BLOCKS.register("quark_limestone_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_PROSPERITY_ORE = BLOCKS.register("quark_marble_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_PROSPERITY_ORE = BLOCKS.register("quark_slate_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_PROSPERITY_ORE = BLOCKS.register("embellishcraft_basalt_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_PROSPERITY_ORE = BLOCKS.register("embellishcraft_jade_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_PROSPERITY_ORE = BLOCKS.register("embellishcraft_gneiss_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_PROSPERITY_ORE = BLOCKS.register("embellishcraft_marble_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_PROSPERITY_ORE = BLOCKS.register("embellishcraft_larvikite_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_PROSPERITY_ORE = BLOCKS.register("embellishcraft_slate_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_PROSPERITY_ORE = BLOCKS.register("hardened_stone_prosperity_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_PRUDENTIUM_ORE = BLOCKS.register("stone_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_PRUDENTIUM_ORE = BLOCKS.register("andesite_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_PRUDENTIUM_ORE = BLOCKS.register("diorite_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_PRUDENTIUM_ORE = BLOCKS.register("granite_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_PRUDENTIUM_ORE = BLOCKS.register("netherrack_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_PRUDENTIUM_ORE = BLOCKS.register("end_stone_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_PRUDENTIUM_ORE = BLOCKS.register("sand_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_PRUDENTIUM_ORE = BLOCKS.register("red_sand_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_PRUDENTIUM_ORE = BLOCKS.register("gravel_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_PRUDENTIUM_ORE = BLOCKS.register("sandstone_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_PRUDENTIUM_ORE = BLOCKS.register("red_sandstone_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_PRUDENTIUM_ORE = BLOCKS.register("blue_ice_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_PRUDENTIUM_ORE = BLOCKS.register("packed_ice_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_PRUDENTIUM_ORE = BLOCKS.register("bedrock_prudentium_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_PRUDENTIUM_ORE = BLOCKS.register("quark_basalt_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_PRUDENTIUM_ORE = BLOCKS.register("quark_jasper_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_PRUDENTIUM_ORE = BLOCKS.register("quark_limestone_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_PRUDENTIUM_ORE = BLOCKS.register("quark_marble_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_PRUDENTIUM_ORE = BLOCKS.register("quark_slate_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_PRUDENTIUM_ORE = BLOCKS.register("embellishcraft_basalt_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_PRUDENTIUM_ORE = BLOCKS.register("embellishcraft_jade_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_PRUDENTIUM_ORE = BLOCKS.register("embellishcraft_gneiss_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_PRUDENTIUM_ORE = BLOCKS.register("embellishcraft_marble_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_PRUDENTIUM_ORE = BLOCKS.register("embellishcraft_larvikite_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_PRUDENTIUM_ORE = BLOCKS.register("embellishcraft_slate_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_PRUDENTIUM_ORE = BLOCKS.register("hardened_stone_prudentium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_RUBY_ORE = BLOCKS.register("stone_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_RUBY_ORE = BLOCKS.register("andesite_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_RUBY_ORE = BLOCKS.register("diorite_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_RUBY_ORE = BLOCKS.register("granite_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_RUBY_ORE = BLOCKS.register("netherrack_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_RUBY_ORE = BLOCKS.register("end_stone_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_RUBY_ORE = BLOCKS.register("sand_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_RUBY_ORE = BLOCKS.register("red_sand_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_RUBY_ORE = BLOCKS.register("gravel_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_RUBY_ORE = BLOCKS.register("sandstone_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_RUBY_ORE = BLOCKS.register("red_sandstone_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_RUBY_ORE = BLOCKS.register("blue_ice_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_RUBY_ORE = BLOCKS.register("packed_ice_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_RUBY_ORE = BLOCKS.register("bedrock_ruby_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_RUBY_ORE = BLOCKS.register("quark_basalt_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_RUBY_ORE = BLOCKS.register("quark_jasper_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_RUBY_ORE = BLOCKS.register("quark_limestone_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_RUBY_ORE = BLOCKS.register("quark_marble_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_RUBY_ORE = BLOCKS.register("quark_slate_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_RUBY_ORE = BLOCKS.register("embellishcraft_basalt_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_RUBY_ORE = BLOCKS.register("embellishcraft_jade_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_RUBY_ORE = BLOCKS.register("embellishcraft_gneiss_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_RUBY_ORE = BLOCKS.register("embellishcraft_marble_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_RUBY_ORE = BLOCKS.register("embellishcraft_larvikite_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_RUBY_ORE = BLOCKS.register("embellishcraft_slate_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_RUBY_ORE = BLOCKS.register("hardened_stone_ruby_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_SAPPHIRE_ORE = BLOCKS.register("stone_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_SAPPHIRE_ORE = BLOCKS.register("andesite_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_SAPPHIRE_ORE = BLOCKS.register("diorite_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_SAPPHIRE_ORE = BLOCKS.register("granite_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_SAPPHIRE_ORE = BLOCKS.register("netherrack_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_SAPPHIRE_ORE = BLOCKS.register("end_stone_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_SAPPHIRE_ORE = BLOCKS.register("sand_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_SAPPHIRE_ORE = BLOCKS.register("red_sand_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_SAPPHIRE_ORE = BLOCKS.register("gravel_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_SAPPHIRE_ORE = BLOCKS.register("sandstone_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_SAPPHIRE_ORE = BLOCKS.register("red_sandstone_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_SAPPHIRE_ORE = BLOCKS.register("blue_ice_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_SAPPHIRE_ORE = BLOCKS.register("packed_ice_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_SAPPHIRE_ORE = BLOCKS.register("bedrock_sapphire_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_SAPPHIRE_ORE = BLOCKS.register("quark_basalt_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_SAPPHIRE_ORE = BLOCKS.register("quark_jasper_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_SAPPHIRE_ORE = BLOCKS.register("quark_limestone_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_SAPPHIRE_ORE = BLOCKS.register("quark_marble_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_SAPPHIRE_ORE = BLOCKS.register("quark_slate_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_SAPPHIRE_ORE = BLOCKS.register("embellishcraft_basalt_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_SAPPHIRE_ORE = BLOCKS.register("embellishcraft_jade_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_SAPPHIRE_ORE = BLOCKS.register("embellishcraft_gneiss_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_SAPPHIRE_ORE = BLOCKS.register("embellishcraft_marble_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_SAPPHIRE_ORE = BLOCKS.register("embellishcraft_larvikite_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_SAPPHIRE_ORE = BLOCKS.register("embellishcraft_slate_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_SAPPHIRE_ORE = BLOCKS.register("hardened_stone_sapphire_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_SUPREMIUM_ORE = BLOCKS.register("stone_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_SUPREMIUM_ORE = BLOCKS.register("andesite_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_SUPREMIUM_ORE = BLOCKS.register("diorite_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_SUPREMIUM_ORE = BLOCKS.register("granite_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_SUPREMIUM_ORE = BLOCKS.register("netherrack_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_SUPREMIUM_ORE = BLOCKS.register("end_stone_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_SUPREMIUM_ORE = BLOCKS.register("sand_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_SUPREMIUM_ORE = BLOCKS.register("red_sand_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_SUPREMIUM_ORE = BLOCKS.register("gravel_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_SUPREMIUM_ORE = BLOCKS.register("sandstone_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_SUPREMIUM_ORE = BLOCKS.register("red_sandstone_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_SUPREMIUM_ORE = BLOCKS.register("blue_ice_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_SUPREMIUM_ORE = BLOCKS.register("packed_ice_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_SUPREMIUM_ORE = BLOCKS.register("bedrock_supremium_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_SUPREMIUM_ORE = BLOCKS.register("quark_basalt_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_SUPREMIUM_ORE = BLOCKS.register("quark_jasper_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_SUPREMIUM_ORE = BLOCKS.register("quark_limestone_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_SUPREMIUM_ORE = BLOCKS.register("quark_marble_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_SUPREMIUM_ORE = BLOCKS.register("quark_slate_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_SUPREMIUM_ORE = BLOCKS.register("embellishcraft_basalt_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_SUPREMIUM_ORE = BLOCKS.register("embellishcraft_jade_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_SUPREMIUM_ORE = BLOCKS.register("embellishcraft_gneiss_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_SUPREMIUM_ORE = BLOCKS.register("embellishcraft_marble_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_SUPREMIUM_ORE = BLOCKS.register("embellishcraft_larvikite_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_SUPREMIUM_ORE = BLOCKS.register("embellishcraft_slate_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_SUPREMIUM_ORE = BLOCKS.register("hardened_stone_supremium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_TERTIUM_ORE = BLOCKS.register("stone_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_TERTIUM_ORE = BLOCKS.register("andesite_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_TERTIUM_ORE = BLOCKS.register("diorite_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_TERTIUM_ORE = BLOCKS.register("granite_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_TERTIUM_ORE = BLOCKS.register("netherrack_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_TERTIUM_ORE = BLOCKS.register("end_stone_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_TERTIUM_ORE = BLOCKS.register("sand_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_TERTIUM_ORE = BLOCKS.register("red_sand_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_TERTIUM_ORE = BLOCKS.register("gravel_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_TERTIUM_ORE = BLOCKS.register("sandstone_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_TERTIUM_ORE = BLOCKS.register("red_sandstone_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_TERTIUM_ORE = BLOCKS.register("blue_ice_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_TERTIUM_ORE = BLOCKS.register("packed_ice_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_TERTIUM_ORE = BLOCKS.register("bedrock_tertium_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_TERTIUM_ORE = BLOCKS.register("quark_basalt_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_TERTIUM_ORE = BLOCKS.register("quark_jasper_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_TERTIUM_ORE = BLOCKS.register("quark_limestone_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_TERTIUM_ORE = BLOCKS.register("quark_marble_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_TERTIUM_ORE = BLOCKS.register("quark_slate_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_TERTIUM_ORE = BLOCKS.register("embellishcraft_basalt_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_TERTIUM_ORE = BLOCKS.register("embellishcraft_jade_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_TERTIUM_ORE = BLOCKS.register("embellishcraft_gneiss_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_TERTIUM_ORE = BLOCKS.register("embellishcraft_marble_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_TERTIUM_ORE = BLOCKS.register("embellishcraft_larvikite_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_TERTIUM_ORE = BLOCKS.register("embellishcraft_slate_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_TERTIUM_ORE = BLOCKS.register("hardened_stone_tertium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_ZANITE_ORE = BLOCKS.register("stone_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_ZANITE_ORE = BLOCKS.register("andesite_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_ZANITE_ORE = BLOCKS.register("diorite_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_ZANITE_ORE = BLOCKS.register("granite_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_ZANITE_ORE = BLOCKS.register("netherrack_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_ZANITE_ORE = BLOCKS.register("end_stone_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_ZANITE_ORE = BLOCKS.register("sand_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_ZANITE_ORE = BLOCKS.register("red_sand_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_ZANITE_ORE = BLOCKS.register("gravel_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_ZANITE_ORE = BLOCKS.register("sandstone_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_ZANITE_ORE = BLOCKS.register("red_sandstone_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_ZANITE_ORE = BLOCKS.register("blue_ice_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_ZANITE_ORE = BLOCKS.register("packed_ice_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_ZANITE_ORE = BLOCKS.register("bedrock_zanite_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_ZANITE_ORE = BLOCKS.register("quark_basalt_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_ZANITE_ORE = BLOCKS.register("quark_jasper_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_ZANITE_ORE = BLOCKS.register("quark_limestone_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_ZANITE_ORE = BLOCKS.register("quark_marble_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_ZANITE_ORE = BLOCKS.register("quark_slate_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_ZANITE_ORE = BLOCKS.register("embellishcraft_basalt_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_ZANITE_ORE = BLOCKS.register("embellishcraft_jade_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_ZANITE_ORE = BLOCKS.register("embellishcraft_gneiss_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_ZANITE_ORE = BLOCKS.register("embellishcraft_marble_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_ZANITE_ORE = BLOCKS.register("embellishcraft_larvikite_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_ZANITE_ORE = BLOCKS.register("embellishcraft_slate_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_ZANITE_ORE = BLOCKS.register("hardened_stone_zanite_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_DRACONIUM_ORE = BLOCKS.register("stone_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_DRACONIUM_ORE = BLOCKS.register("andesite_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_DRACONIUM_ORE = BLOCKS.register("diorite_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_DRACONIUM_ORE = BLOCKS.register("granite_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_DRACONIUM_ORE = BLOCKS.register("netherrack_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_DRACONIUM_ORE = BLOCKS.register("end_stone_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_DRACONIUM_ORE = BLOCKS.register("sand_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_DRACONIUM_ORE = BLOCKS.register("red_sand_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_DRACONIUM_ORE = BLOCKS.register("gravel_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_DRACONIUM_ORE = BLOCKS.register("sandstone_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_DRACONIUM_ORE = BLOCKS.register("red_sandstone_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_DRACONIUM_ORE = BLOCKS.register("blue_ice_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_DRACONIUM_ORE = BLOCKS.register("packed_ice_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_DRACONIUM_ORE = BLOCKS.register("bedrock_draconium_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_DRACONIUM_ORE = BLOCKS.register("quark_basalt_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_DRACONIUM_ORE = BLOCKS.register("quark_jasper_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_DRACONIUM_ORE = BLOCKS.register("quark_limestone_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_DRACONIUM_ORE = BLOCKS.register("quark_marble_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_DRACONIUM_ORE = BLOCKS.register("quark_slate_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_DRACONIUM_ORE = BLOCKS.register("embellishcraft_basalt_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_DRACONIUM_ORE = BLOCKS.register("embellishcraft_jade_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_DRACONIUM_ORE = BLOCKS.register("embellishcraft_gneiss_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_DRACONIUM_ORE = BLOCKS.register("embellishcraft_marble_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_DRACONIUM_ORE = BLOCKS.register("embellishcraft_larvikite_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_DRACONIUM_ORE = BLOCKS.register("embellishcraft_slate_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_DRACONIUM_ORE = BLOCKS.register("hardened_stone_draconium_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_AMETHYST_ORE = BLOCKS.register("stone_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_AMETHYST_ORE = BLOCKS.register("andesite_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_AMETHYST_ORE = BLOCKS.register("diorite_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_AMETHYST_ORE = BLOCKS.register("granite_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_AMETHYST_ORE = BLOCKS.register("netherrack_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_AMETHYST_ORE = BLOCKS.register("end_stone_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_AMETHYST_ORE = BLOCKS.register("sand_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_AMETHYST_ORE = BLOCKS.register("red_sand_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_AMETHYST_ORE = BLOCKS.register("gravel_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_AMETHYST_ORE = BLOCKS.register("sandstone_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_AMETHYST_ORE = BLOCKS.register("red_sandstone_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_AMETHYST_ORE = BLOCKS.register("blue_ice_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_AMETHYST_ORE = BLOCKS.register("packed_ice_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_AMETHYST_ORE = BLOCKS.register("bedrock_amethyst_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_AMETHYST_ORE = BLOCKS.register("quark_basalt_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_AMETHYST_ORE = BLOCKS.register("quark_jasper_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_AMETHYST_ORE = BLOCKS.register("quark_limestone_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_AMETHYST_ORE = BLOCKS.register("quark_marble_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_AMETHYST_ORE = BLOCKS.register("quark_slate_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_AMETHYST_ORE = BLOCKS.register("embellishcraft_basalt_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_AMETHYST_ORE = BLOCKS.register("embellishcraft_jade_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_AMETHYST_ORE = BLOCKS.register("embellishcraft_gneiss_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_AMETHYST_ORE = BLOCKS.register("embellishcraft_marble_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_AMETHYST_ORE = BLOCKS.register("embellishcraft_larvikite_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_AMETHYST_ORE = BLOCKS.register("embellishcraft_slate_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(3).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_AMETHYST_ORE = BLOCKS.register("hardened_stone_amethyst_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_BLACK_OPAL_ORE = BLOCKS.register("stone_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_BLACK_OPAL_ORE = BLOCKS.register("andesite_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_BLACK_OPAL_ORE = BLOCKS.register("diorite_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_BLACK_OPAL_ORE = BLOCKS.register("granite_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_BLACK_OPAL_ORE = BLOCKS.register("netherrack_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_BLACK_OPAL_ORE = BLOCKS.register("end_stone_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_BLACK_OPAL_ORE = BLOCKS.register("sand_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_BLACK_OPAL_ORE = BLOCKS.register("red_sand_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_BLACK_OPAL_ORE = BLOCKS.register("gravel_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_BLACK_OPAL_ORE = BLOCKS.register("sandstone_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_BLACK_OPAL_ORE = BLOCKS.register("red_sandstone_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_BLACK_OPAL_ORE = BLOCKS.register("blue_ice_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_BLACK_OPAL_ORE = BLOCKS.register("packed_ice_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_BLACK_OPAL_ORE = BLOCKS.register("bedrock_black_opal_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_BLACK_OPAL_ORE = BLOCKS.register("quark_basalt_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_BLACK_OPAL_ORE = BLOCKS.register("quark_jasper_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_BLACK_OPAL_ORE = BLOCKS.register("quark_limestone_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_BLACK_OPAL_ORE = BLOCKS.register("quark_marble_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_BLACK_OPAL_ORE = BLOCKS.register("quark_slate_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_BLACK_OPAL_ORE = BLOCKS.register("embellishcraft_basalt_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_BLACK_OPAL_ORE = BLOCKS.register("embellishcraft_jade_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_BLACK_OPAL_ORE = BLOCKS.register("embellishcraft_gneiss_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_BLACK_OPAL_ORE = BLOCKS.register("embellishcraft_marble_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_BLACK_OPAL_ORE = BLOCKS.register("embellishcraft_larvikite_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_BLACK_OPAL_ORE = BLOCKS.register("embellishcraft_slate_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_BLACK_OPAL_ORE = BLOCKS.register("hardened_stone_black_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(5).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_WHITE_OPAL_ORE = BLOCKS.register("stone_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_WHITE_OPAL_ORE = BLOCKS.register("andesite_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_WHITE_OPAL_ORE = BLOCKS.register("diorite_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_WHITE_OPAL_ORE = BLOCKS.register("granite_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_WHITE_OPAL_ORE = BLOCKS.register("netherrack_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_WHITE_OPAL_ORE = BLOCKS.register("end_stone_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_WHITE_OPAL_ORE = BLOCKS.register("sand_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_WHITE_OPAL_ORE = BLOCKS.register("red_sand_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_WHITE_OPAL_ORE = BLOCKS.register("gravel_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_WHITE_OPAL_ORE = BLOCKS.register("sandstone_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_WHITE_OPAL_ORE = BLOCKS.register("red_sandstone_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_WHITE_OPAL_ORE = BLOCKS.register("blue_ice_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_WHITE_OPAL_ORE = BLOCKS.register("packed_ice_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_WHITE_OPAL_ORE = BLOCKS.register("bedrock_white_opal_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_WHITE_OPAL_ORE = BLOCKS.register("quark_basalt_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_WHITE_OPAL_ORE = BLOCKS.register("quark_jasper_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_WHITE_OPAL_ORE = BLOCKS.register("quark_limestone_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_WHITE_OPAL_ORE = BLOCKS.register("quark_marble_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_WHITE_OPAL_ORE = BLOCKS.register("quark_slate_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_WHITE_OPAL_ORE = BLOCKS.register("embellishcraft_basalt_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_WHITE_OPAL_ORE = BLOCKS.register("embellishcraft_jade_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_WHITE_OPAL_ORE = BLOCKS.register("embellishcraft_gneiss_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_WHITE_OPAL_ORE = BLOCKS.register("embellishcraft_marble_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_WHITE_OPAL_ORE = BLOCKS.register("embellishcraft_larvikite_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_WHITE_OPAL_ORE = BLOCKS.register("embellishcraft_slate_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(4).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_WHITE_OPAL_ORE = BLOCKS.register("hardened_stone_white_opal_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(5).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

    public static final RegistryObject<Block> STONE_XP_ORE = BLOCKS.register("stone_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.STONE));
    public static final RegistryObject<Block> ANDESITE_XP_ORE = BLOCKS.register("andesite_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.ANDESITE));
    public static final RegistryObject<Block> DIORITE_XP_ORE = BLOCKS.register("diorite_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.QUARTZ).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.DIORITE));
    public static final RegistryObject<Block> GRANITE_XP_ORE = BLOCKS.register("granite_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.DIRT).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.GRANITE));
    public static final RegistryObject<Block> NETHERRACK_XP_ORE = BLOCKS.register("netherrack_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.NETHERRACK).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.NETHERRACK));
    public static final RegistryObject<Block> END_STONE_XP_ORE = BLOCKS.register("end_stone_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.END_STONE));
    public static final RegistryObject<Block> SAND_XP_ORE = BLOCKS.register("sand_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.SAND));
    public static final RegistryObject<Block> RED_SAND_XP_ORE = BLOCKS.register("red_sand_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.SAND_ORE, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND), Blocks.RED_SAND));
    public static final RegistryObject<Block> GRAVEL_XP_ORE = BLOCKS.register("gravel_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(MyMaterials.GRAVEL_ORE, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.SHOVEL).sound(SoundType.GROUND), Blocks.GRAVEL));
    public static final RegistryObject<Block> SANDSTONE_XP_ORE = BLOCKS.register("sandstone_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.SAND).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.SANDSTONE));
    public static final RegistryObject<Block> RED_SANDSTONE_XP_ORE = BLOCKS.register("red_sandstone_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.ADOBE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), Blocks.RED_SANDSTONE));
    public static final RegistryObject<Block> BLUE_ICE_XP_ORE = BLOCKS.register("blue_ice_xp_ore", () -> new BaseBlock(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.989F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.BLUE_ICE));
    public static final RegistryObject<Block> PACKED_ICE_XP_ORE = BLOCKS.register("packed_ice_xp_ore", () -> new BaseBlock(Block.Properties.create(MyMaterials.ICE_ORE, MaterialColor.ICE).slipperiness(0.98F).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE).sound(SoundType.GLASS), Blocks.PACKED_ICE));
    public static final RegistryObject<Block> BEDROCK_XP_ORE = BLOCKS.register("bedrock_xp_ore", () -> new BedrockOreWithXpDrop(Block.Properties.create(Material.ROCK).hardnessAndResistance(-1.0F, 9.0F), Blocks.BEDROCK));
    public static final RegistryObject<Block> QUARK_BASALT_XP_ORE = BLOCKS.register("quark_basalt_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_BASALT));
    public static final RegistryObject<Block> QUARK_JASPER_XP_ORE = BLOCKS.register("quark_jasper_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_JASPER));
    public static final RegistryObject<Block> QUARK_LIMESTONE_XP_ORE = BLOCKS.register("quark_limestone_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_LIMESTONE));
    public static final RegistryObject<Block> QUARK_MARBLE_XP_ORE = BLOCKS.register("quark_marble_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_MARBLE));
    public static final RegistryObject<Block> QUARK_SLATE_XP_ORE = BLOCKS.register("quark_slate_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.QUARK_SLATE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_BASALT_XP_ORE = BLOCKS.register("embellishcraft_basalt_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_BASALT));
    public static final RegistryObject<Block> EMBELLISHCRAFT_JADE_XP_ORE = BLOCKS.register("embellishcraft_jade_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_JADE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_GNEISS_XP_ORE = BLOCKS.register("embellishcraft_gneiss_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_GNEISS));
    public static final RegistryObject<Block> EMBELLISHCRAFT_MARBLE_XP_ORE = BLOCKS.register("embellishcraft_marble_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_MARBLE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_LARVIKITE_XP_ORE = BLOCKS.register("embellishcraft_larvikite_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_LARVIKITE));
    public static final RegistryObject<Block> EMBELLISHCRAFT_SLATE_XP_ORE = BLOCKS.register("embellishcraft_slate_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(3.0F).harvestLevel(1).harvestTool(ToolType.PICKAXE), BlockInit.EMBELLISHCRAFT_SLATE));
    public static final RegistryObject<Block> HARDENED_STONE_XP_ORE = BLOCKS.register("hardened_stone_xp_ore", () -> new OreWithXpDrop(Block.Properties.create(Material.ROCK, MaterialColor.STONE).hardnessAndResistance(4.0F, 6.0F).harvestLevel(2).harvestTool(ToolType.PICKAXE), BlockInit.HARDENED_STONE.get()));

}
