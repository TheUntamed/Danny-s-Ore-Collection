package com.danny.dannys_ores.generation;

import com.danny.dannys_ores.Main;
import com.danny.dannys_ores.configs.Adamantium;
import com.danny.dannys_ores.configs.General;
import com.danny.dannys_ores.init.BlockInit;
import net.minecraft.block.Blocks;
import net.minecraft.block.pattern.BlockMatcher;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.GenerationStage;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.OreFeatureConfig;
import net.minecraft.world.gen.placement.CountRangeConfig;
import net.minecraft.world.gen.placement.Placement;

public class AdamantiumGen {
    public static void addAdamantiumGen(Biome biome, String biomeRNS, String biomeTS) {
        addAdamantiumOreGeneration(biome, biomeRNS, biomeTS);
    }

    private static void addAdamantiumOreGeneration(Biome biome, String biomeRNS, String biomeTS) {
        // Vanilla
        if (!General.disableStoneOreGeneration.get()) {
            if (Adamantium.enableStoneAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistStoneAdamantiumOre.get() && Adamantium.temperatureBlacklistStoneAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistStoneAdamantiumOre.get() && !Adamantium.temperatureBlacklistStoneAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistStoneAdamantiumOre.get() && Adamantium.biomeBlacklistStoneAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistStoneAdamantiumOre.get() && !Adamantium.biomeBlacklistStoneAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("stone", null, new BlockMatcher(Blocks.STONE)), BlockInit.STONE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeStoneAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkStoneAdamantiumOre.get(), Adamantium.minHeightStoneAdamantiumOre.get(), 0, Adamantium.maxHeightStoneAdamantiumOre.get()))));
                    } } } }
        if (!General.disableAndesiteOreGeneration.get()) {
            if (Adamantium.enableAndesiteAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistAndesiteAdamantiumOre.get() && Adamantium.temperatureBlacklistAndesiteAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistAndesiteAdamantiumOre.get() && !Adamantium.temperatureBlacklistAndesiteAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistAndesiteAdamantiumOre.get() && Adamantium.biomeBlacklistAndesiteAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistAndesiteAdamantiumOre.get() && !Adamantium.biomeBlacklistAndesiteAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("andesite", null, new BlockMatcher(Blocks.ANDESITE)), BlockInit.ANDESITE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeAndesiteAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkAndesiteAdamantiumOre.get(), Adamantium.minHeightAndesiteAdamantiumOre.get(), 0, Adamantium.maxHeightAndesiteAdamantiumOre.get()))));
                    } } } }
        if (!General.disableDioriteOreGeneration.get()) {
            if (Adamantium.enableDioriteAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistDioriteAdamantiumOre.get() && Adamantium.temperatureBlacklistDioriteAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistDioriteAdamantiumOre.get() && !Adamantium.temperatureBlacklistDioriteAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistDioriteAdamantiumOre.get() && Adamantium.biomeBlacklistDioriteAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistDioriteAdamantiumOre.get() && !Adamantium.biomeBlacklistDioriteAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("diorite", null, new BlockMatcher(Blocks.DIORITE)), BlockInit.DIORITE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeDioriteAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkDioriteAdamantiumOre.get(), Adamantium.minHeightDioriteAdamantiumOre.get(), 0, Adamantium.maxHeightDioriteAdamantiumOre.get()))));
                    } } } }
        if (!General.disableGraniteOreGeneration.get()) {
            if (Adamantium.enableGraniteAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistGraniteAdamantiumOre.get() && Adamantium.temperatureBlacklistGraniteAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistGraniteAdamantiumOre.get() && !Adamantium.temperatureBlacklistGraniteAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistGraniteAdamantiumOre.get() && Adamantium.biomeBlacklistGraniteAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistGraniteAdamantiumOre.get() && !Adamantium.biomeBlacklistGraniteAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("granite", null, new BlockMatcher(Blocks.GRANITE)), BlockInit.GRANITE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeGraniteAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkGraniteAdamantiumOre.get(), Adamantium.minHeightGraniteAdamantiumOre.get(), 0, Adamantium.maxHeightGraniteAdamantiumOre.get()))));
                    } } } }
        if (!General.disableNetherrackOreGeneration.get()) {
            if (Adamantium.enableNetherrackAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistNetherrackAdamantiumOre.get() && Adamantium.temperatureBlacklistNetherrackAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistNetherrackAdamantiumOre.get() && !Adamantium.temperatureBlacklistNetherrackAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistNetherrackAdamantiumOre.get() && Adamantium.biomeBlacklistNetherrackAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistNetherrackAdamantiumOre.get() && !Adamantium.biomeBlacklistNetherrackAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("netherrack", null, new BlockMatcher(Blocks.NETHERRACK)), BlockInit.NETHERRACK_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeNetherrackAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkNetherrackAdamantiumOre.get(), Adamantium.minHeightNetherrackAdamantiumOre.get(), 0, Adamantium.maxHeightNetherrackAdamantiumOre.get()))));
                    } } } }
        if (!General.disableEndStoneOreGeneration.get()) {
            if (Adamantium.enableEndStoneAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistEndStoneAdamantiumOre.get() && Adamantium.temperatureBlacklistEndStoneAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistEndStoneAdamantiumOre.get() && !Adamantium.temperatureBlacklistEndStoneAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistEndStoneAdamantiumOre.get() && Adamantium.biomeBlacklistEndStoneAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistEndStoneAdamantiumOre.get() && !Adamantium.biomeBlacklistEndStoneAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("end_stone", null, new BlockMatcher(Blocks.END_STONE)), BlockInit.END_STONE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeEndStoneAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkEndStoneAdamantiumOre.get(), Adamantium.minHeightEndStoneAdamantiumOre.get(), 0, Adamantium.maxHeightEndStoneAdamantiumOre.get()))));
                    } } } }
        if (!General.disableSandOreGeneration.get()) {
            if (Adamantium.enableSandAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistSandAdamantiumOre.get() && Adamantium.temperatureBlacklistSandAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistSandAdamantiumOre.get() && !Adamantium.temperatureBlacklistSandAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistSandAdamantiumOre.get() && Adamantium.biomeBlacklistSandAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistSandAdamantiumOre.get() && !Adamantium.biomeBlacklistSandAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("sand", null, new BlockMatcher(Blocks.SAND)), BlockInit.SAND_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeSandAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkSandAdamantiumOre.get(), Adamantium.minHeightSandAdamantiumOre.get(), 0, Adamantium.maxHeightSandAdamantiumOre.get()))));
                    } } } }
        if (!General.disableRedSandOreGeneration.get()) {
            if (Adamantium.enableRedSandAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistRedSandAdamantiumOre.get() && Adamantium.temperatureBlacklistRedSandAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistRedSandAdamantiumOre.get() && !Adamantium.temperatureBlacklistRedSandAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistRedSandAdamantiumOre.get() && Adamantium.biomeBlacklistRedSandAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistRedSandAdamantiumOre.get() && !Adamantium.biomeBlacklistRedSandAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("red_sand", null, new BlockMatcher(Blocks.RED_SAND)), BlockInit.RED_SAND_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeRedSandAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkRedSandAdamantiumOre.get(), Adamantium.minHeightRedSandAdamantiumOre.get(), 0, Adamantium.maxHeightRedSandAdamantiumOre.get()))));
                    } } } }
        if (!General.disableGravelOreGeneration.get()) {
            if (Adamantium.enableGravelAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistGravelAdamantiumOre.get() && Adamantium.temperatureBlacklistGravelAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistGravelAdamantiumOre.get() && !Adamantium.temperatureBlacklistGravelAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistGravelAdamantiumOre.get() && Adamantium.biomeBlacklistGravelAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistGravelAdamantiumOre.get() && !Adamantium.biomeBlacklistGravelAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("gravel", null, new BlockMatcher(Blocks.GRAVEL)), BlockInit.GRAVEL_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeGravelAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkGravelAdamantiumOre.get(), Adamantium.minHeightGravelAdamantiumOre.get(), 0, Adamantium.maxHeightGravelAdamantiumOre.get()))));
                    } } } }
        if (!General.disableSandstoneOreGeneration.get()) {
            if (Adamantium.enableSandstoneAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistSandstoneAdamantiumOre.get() && Adamantium.temperatureBlacklistSandstoneAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistSandstoneAdamantiumOre.get() && !Adamantium.temperatureBlacklistSandstoneAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistSandstoneAdamantiumOre.get() && Adamantium.biomeBlacklistSandstoneAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistSandstoneAdamantiumOre.get() && !Adamantium.biomeBlacklistSandstoneAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("sandstone", null, new BlockMatcher(Blocks.SANDSTONE)), BlockInit.SANDSTONE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeSandstoneAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkSandstoneAdamantiumOre.get(), Adamantium.minHeightSandstoneAdamantiumOre.get(), 0, Adamantium.maxHeightSandstoneAdamantiumOre.get()))));
                    } } } }
        if (!General.disableRedSandstoneOreGeneration.get()) {
            if (Adamantium.enableRedSandstoneAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistRedSandstoneAdamantiumOre.get() && Adamantium.temperatureBlacklistRedSandstoneAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistRedSandstoneAdamantiumOre.get() && !Adamantium.temperatureBlacklistRedSandstoneAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistRedSandstoneAdamantiumOre.get() && Adamantium.biomeBlacklistRedSandstoneAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistRedSandstoneAdamantiumOre.get() && !Adamantium.biomeBlacklistRedSandstoneAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("red_sandstone", null, new BlockMatcher(Blocks.RED_SANDSTONE)), BlockInit.RED_SANDSTONE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeRedSandstoneAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkRedSandstoneAdamantiumOre.get(), Adamantium.minHeightRedSandstoneAdamantiumOre.get(), 0, Adamantium.maxHeightRedSandstoneAdamantiumOre.get()))));
                    } } } }
        if (!General.disableBlueIceOreGeneration.get()) {
            if (Adamantium.enableBlueIceAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistBlueIceAdamantiumOre.get() && Adamantium.temperatureBlacklistBlueIceAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistBlueIceAdamantiumOre.get() && !Adamantium.temperatureBlacklistBlueIceAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistBlueIceAdamantiumOre.get() && Adamantium.biomeBlacklistBlueIceAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistBlueIceAdamantiumOre.get() && !Adamantium.biomeBlacklistBlueIceAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("blue_ice", null, new BlockMatcher(Blocks.BLUE_ICE)), BlockInit.BLUE_ICE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeBlueIceAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkBlueIceAdamantiumOre.get(), Adamantium.minHeightBlueIceAdamantiumOre.get(), 0, Adamantium.maxHeightBlueIceAdamantiumOre.get()))));
                    } } } }
        if (!General.disablePackedIceOreGeneration.get()) {
            if (Adamantium.enablePackedIceAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistPackedIceAdamantiumOre.get() && Adamantium.temperatureBlacklistPackedIceAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistPackedIceAdamantiumOre.get() && !Adamantium.temperatureBlacklistPackedIceAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistPackedIceAdamantiumOre.get() && Adamantium.biomeBlacklistPackedIceAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistPackedIceAdamantiumOre.get() && !Adamantium.biomeBlacklistPackedIceAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("packed_ice", null, new BlockMatcher(Blocks.PACKED_ICE)), BlockInit.PACKED_ICE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizePackedIceAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkPackedIceAdamantiumOre.get(), Adamantium.minHeightPackedIceAdamantiumOre.get(), 0, Adamantium.maxHeightPackedIceAdamantiumOre.get()))));
                    } } } }
        if (!General.disableBedrockOreGeneration.get()) {
            if (Adamantium.enableBedrockAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistBedrockAdamantiumOre.get() && Adamantium.temperatureBlacklistBedrockAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistBedrockAdamantiumOre.get() && !Adamantium.temperatureBlacklistBedrockAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistBedrockAdamantiumOre.get() && Adamantium.biomeBlacklistBedrockAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistBedrockAdamantiumOre.get() && !Adamantium.biomeBlacklistBedrockAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("bedrock", null, new BlockMatcher(Blocks.BEDROCK)), BlockInit.BEDROCK_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeBedrockAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkBedrockAdamantiumOre.get(), Adamantium.minHeightBedrockAdamantiumOre.get(), 0, Adamantium.maxHeightBedrockAdamantiumOre.get()))));
                    } } } }
        // Quark
        if (!General.disableQuarkBasaltOreGeneration.get() && Main.quark) {
            if (Adamantium.enableQuarkBasaltAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistQuarkBasaltAdamantiumOre.get() && Adamantium.temperatureBlacklistQuarkBasaltAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistQuarkBasaltAdamantiumOre.get() && !Adamantium.temperatureBlacklistQuarkBasaltAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistQuarkBasaltAdamantiumOre.get() && Adamantium.biomeBlacklistQuarkBasaltAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistQuarkBasaltAdamantiumOre.get() && !Adamantium.biomeBlacklistQuarkBasaltAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_basalt", null, new BlockMatcher(BlockInit.QUARK_BASALT != null ? BlockInit.QUARK_BASALT : Blocks.BARRIER)), BlockInit.QUARK_BASALT_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeQuarkBasaltAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkQuarkBasaltAdamantiumOre.get(), Adamantium.minHeightQuarkBasaltAdamantiumOre.get(), 0, Adamantium.maxHeightQuarkBasaltAdamantiumOre.get()))));
                    } } } }
        if (!General.disableQuarkMarbleOreGeneration.get() && Main.quark) {
            if (Adamantium.enableQuarkMarbleAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistQuarkMarbleAdamantiumOre.get() && Adamantium.temperatureBlacklistQuarkMarbleAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistQuarkMarbleAdamantiumOre.get() && !Adamantium.temperatureBlacklistQuarkMarbleAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistQuarkMarbleAdamantiumOre.get() && Adamantium.biomeBlacklistQuarkMarbleAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistQuarkMarbleAdamantiumOre.get() && !Adamantium.biomeBlacklistQuarkMarbleAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_marble", null, new BlockMatcher(BlockInit.QUARK_MARBLE != null ? BlockInit.QUARK_MARBLE : Blocks.BARRIER)), BlockInit.QUARK_MARBLE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeQuarkMarbleAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkQuarkMarbleAdamantiumOre.get(), Adamantium.minHeightQuarkMarbleAdamantiumOre.get(), 0, Adamantium.maxHeightQuarkMarbleAdamantiumOre.get()))));
                    } } } }
        if (!General.disableQuarkSlateOreGeneration.get() && Main.quark) {
            if (Adamantium.enableQuarkSlateAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistQuarkSlateAdamantiumOre.get() && Adamantium.temperatureBlacklistQuarkSlateAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistQuarkSlateAdamantiumOre.get() && !Adamantium.temperatureBlacklistQuarkSlateAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistQuarkSlateAdamantiumOre.get() && Adamantium.biomeBlacklistQuarkSlateAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistQuarkSlateAdamantiumOre.get() && !Adamantium.biomeBlacklistQuarkSlateAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_slate", null, new BlockMatcher(BlockInit.QUARK_SLATE != null ? BlockInit.QUARK_SLATE : Blocks.BARRIER)), BlockInit.QUARK_SLATE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeQuarkSlateAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkQuarkSlateAdamantiumOre.get(), Adamantium.minHeightQuarkSlateAdamantiumOre.get(), 0, Adamantium.maxHeightQuarkSlateAdamantiumOre.get()))));
                    } } } }
        if (!General.disableQuarkLimestoneOreGeneration.get() && Main.quark) {
            if (Adamantium.enableQuarkLimestoneAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistQuarkLimestoneAdamantiumOre.get() && Adamantium.temperatureBlacklistQuarkLimestoneAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistQuarkLimestoneAdamantiumOre.get() && !Adamantium.temperatureBlacklistQuarkLimestoneAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistQuarkLimestoneAdamantiumOre.get() && Adamantium.biomeBlacklistQuarkLimestoneAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistQuarkLimestoneAdamantiumOre.get() && !Adamantium.biomeBlacklistQuarkLimestoneAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_limestone", null, new BlockMatcher(BlockInit.QUARK_LIMESTONE != null ? BlockInit.QUARK_LIMESTONE : Blocks.BARRIER)), BlockInit.QUARK_LIMESTONE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeQuarkLimestoneAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkQuarkLimestoneAdamantiumOre.get(), Adamantium.minHeightQuarkLimestoneAdamantiumOre.get(), 0, Adamantium.maxHeightQuarkLimestoneAdamantiumOre.get()))));
                    } } } }
        if (!General.disableQuarkJasperOreGeneration.get() && Main.quark) {
            if (Adamantium.enableQuarkJasperAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistQuarkJasperAdamantiumOre.get() && Adamantium.temperatureBlacklistQuarkJasperAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistQuarkJasperAdamantiumOre.get() && !Adamantium.temperatureBlacklistQuarkJasperAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistQuarkJasperAdamantiumOre.get() && Adamantium.biomeBlacklistQuarkJasperAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistQuarkJasperAdamantiumOre.get() && !Adamantium.biomeBlacklistQuarkJasperAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_jasper", null, new BlockMatcher(BlockInit.QUARK_JASPER != null ? BlockInit.QUARK_JASPER : Blocks.BARRIER)), BlockInit.QUARK_JASPER_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeQuarkJasperAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkQuarkJasperAdamantiumOre.get(), Adamantium.minHeightQuarkJasperAdamantiumOre.get(), 0, Adamantium.maxHeightQuarkJasperAdamantiumOre.get()))));
                    } } } }
        // Embellishcraft
        if (!General.disableEmbellishcraftBasaltOreGeneration.get() && Main.quark) {
            if (Adamantium.enableEmbellishcraftBasaltAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistEmbellishcraftBasaltAdamantiumOre.get() && Adamantium.temperatureBlacklistEmbellishcraftBasaltAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistEmbellishcraftBasaltAdamantiumOre.get() && !Adamantium.temperatureBlacklistEmbellishcraftBasaltAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistEmbellishcraftBasaltAdamantiumOre.get() && Adamantium.biomeBlacklistEmbellishcraftBasaltAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistEmbellishcraftBasaltAdamantiumOre.get() && !Adamantium.biomeBlacklistEmbellishcraftBasaltAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_basalt", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_BASALT != null ? BlockInit.EMBELLISHCRAFT_BASALT : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_BASALT_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeEmbellishcraftBasaltAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkEmbellishcraftBasaltAdamantiumOre.get(), Adamantium.minHeightEmbellishcraftBasaltAdamantiumOre.get(), 0, Adamantium.maxHeightEmbellishcraftBasaltAdamantiumOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftGneissOreGeneration.get() && Main.quark) {
            if (Adamantium.enableEmbellishcraftGneissAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistEmbellishcraftGneissAdamantiumOre.get() && Adamantium.temperatureBlacklistEmbellishcraftGneissAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistEmbellishcraftGneissAdamantiumOre.get() && !Adamantium.temperatureBlacklistEmbellishcraftGneissAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistEmbellishcraftGneissAdamantiumOre.get() && Adamantium.biomeBlacklistEmbellishcraftGneissAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistEmbellishcraftGneissAdamantiumOre.get() && !Adamantium.biomeBlacklistEmbellishcraftGneissAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_gneiss", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_GNEISS != null ? BlockInit.EMBELLISHCRAFT_GNEISS : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_GNEISS_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeEmbellishcraftGneissAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkEmbellishcraftGneissAdamantiumOre.get(), Adamantium.minHeightEmbellishcraftGneissAdamantiumOre.get(), 0, Adamantium.maxHeightEmbellishcraftGneissAdamantiumOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftJadeOreGeneration.get() && Main.quark) {
            if (Adamantium.enableEmbellishcraftJadeAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistEmbellishcraftJadeAdamantiumOre.get() && Adamantium.temperatureBlacklistEmbellishcraftJadeAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistEmbellishcraftJadeAdamantiumOre.get() && !Adamantium.temperatureBlacklistEmbellishcraftJadeAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistEmbellishcraftJadeAdamantiumOre.get() && Adamantium.biomeBlacklistEmbellishcraftJadeAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistEmbellishcraftJadeAdamantiumOre.get() && !Adamantium.biomeBlacklistEmbellishcraftJadeAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_jade", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_JADE != null ? BlockInit.EMBELLISHCRAFT_JADE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_JADE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeEmbellishcraftJadeAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkEmbellishcraftJadeAdamantiumOre.get(), Adamantium.minHeightEmbellishcraftJadeAdamantiumOre.get(), 0, Adamantium.maxHeightEmbellishcraftJadeAdamantiumOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftLarvikiteOreGeneration.get() && Main.quark) {
            if (Adamantium.enableEmbellishcraftLarvikiteAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistEmbellishcraftLarvikiteAdamantiumOre.get() && Adamantium.temperatureBlacklistEmbellishcraftLarvikiteAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistEmbellishcraftLarvikiteAdamantiumOre.get() && !Adamantium.temperatureBlacklistEmbellishcraftLarvikiteAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistEmbellishcraftLarvikiteAdamantiumOre.get() && Adamantium.biomeBlacklistEmbellishcraftLarvikiteAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistEmbellishcraftLarvikiteAdamantiumOre.get() && !Adamantium.biomeBlacklistEmbellishcraftLarvikiteAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_larvikite", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_LARVIKITE != null ? BlockInit.EMBELLISHCRAFT_LARVIKITE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_LARVIKITE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeEmbellishcraftLarvikiteAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkEmbellishcraftLarvikiteAdamantiumOre.get(), Adamantium.minHeightEmbellishcraftLarvikiteAdamantiumOre.get(), 0, Adamantium.maxHeightEmbellishcraftLarvikiteAdamantiumOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftMarbleOreGeneration.get() && Main.quark) {
            if (Adamantium.enableEmbellishcraftMarbleAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistEmbellishcraftMarbleAdamantiumOre.get() && Adamantium.temperatureBlacklistEmbellishcraftMarbleAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistEmbellishcraftMarbleAdamantiumOre.get() && !Adamantium.temperatureBlacklistEmbellishcraftMarbleAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistEmbellishcraftMarbleAdamantiumOre.get() && Adamantium.biomeBlacklistEmbellishcraftMarbleAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistEmbellishcraftMarbleAdamantiumOre.get() && !Adamantium.biomeBlacklistEmbellishcraftMarbleAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_marble", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_MARBLE != null ? BlockInit.EMBELLISHCRAFT_MARBLE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_MARBLE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeEmbellishcraftMarbleAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkEmbellishcraftMarbleAdamantiumOre.get(), Adamantium.minHeightEmbellishcraftMarbleAdamantiumOre.get(), 0, Adamantium.maxHeightEmbellishcraftMarbleAdamantiumOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftSlateOreGeneration.get() && Main.quark) {
            if (Adamantium.enableEmbellishcraftSlateAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistEmbellishcraftSlateAdamantiumOre.get() && Adamantium.temperatureBlacklistEmbellishcraftSlateAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistEmbellishcraftSlateAdamantiumOre.get() && !Adamantium.temperatureBlacklistEmbellishcraftSlateAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistEmbellishcraftSlateAdamantiumOre.get() && Adamantium.biomeBlacklistEmbellishcraftSlateAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistEmbellishcraftSlateAdamantiumOre.get() && !Adamantium.biomeBlacklistEmbellishcraftSlateAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_slate", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_SLATE != null ? BlockInit.EMBELLISHCRAFT_SLATE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_SLATE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeEmbellishcraftSlateAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkEmbellishcraftSlateAdamantiumOre.get(), Adamantium.minHeightEmbellishcraftSlateAdamantiumOre.get(), 0, Adamantium.maxHeightEmbellishcraftSlateAdamantiumOre.get()))));
                    } } } }
        // Danny's Ores
        if (!General.disableHardenedStoneOreGeneration.get()) {
            if (Adamantium.enableHardenedStoneAdamantiumOre.get()) {
                if ((Adamantium.isTempWhitelistHardenedStoneAdamantiumOre.get() && Adamantium.temperatureBlacklistHardenedStoneAdamantiumOre.get().contains(biomeTS)) || (!Adamantium.isTempWhitelistHardenedStoneAdamantiumOre.get() && !Adamantium.temperatureBlacklistHardenedStoneAdamantiumOre.get().contains(biomeTS))) {
                    if ((Adamantium.isBiomeWhitelistHardenedStoneAdamantiumOre.get() && Adamantium.biomeBlacklistHardenedStoneAdamantiumOre.get().contains(biomeRNS)) || (!Adamantium.isBiomeWhitelistHardenedStoneAdamantiumOre.get() && !Adamantium.biomeBlacklistHardenedStoneAdamantiumOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("hardened_stone", null, new BlockMatcher(BlockInit.HARDENED_STONE.get())), BlockInit.HARDENED_STONE_ADAMANTIUM_ORE.get().getDefaultState(), Adamantium.veinSizeHardenedStoneAdamantiumOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(Adamantium.veinsPerChunkHardenedStoneAdamantiumOre.get(), Adamantium.minHeightHardenedStoneAdamantiumOre.get(), 0, Adamantium.maxHeightHardenedStoneAdamantiumOre.get()))));
                    } } } }
    }
}
