package com.danny.dannys_ores.generation;

import com.danny.dannys_ores.Main;
import com.danny.dannys_ores.configs.ManaInfused;
import com.danny.dannys_ores.configs.General;
import com.danny.dannys_ores.init.BlockInit;
import net.minecraft.block.Blocks;
import net.minecraft.block.pattern.BlockMatcher;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.GenerationStage;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.OreFeatureConfig;
import net.minecraft.world.gen.placement.CountRangeConfig;
import net.minecraft.world.gen.placement.Placement;

public class ManaInfusedGen {

    public static void addManaInfusedGen(Biome biome, String biomeRNS, String biomeTS) {
        addManaInfusedOreGeneration(biome, biomeRNS, biomeTS);
    }

    private static void addManaInfusedOreGeneration(Biome biome, String biomeRNS, String biomeTS) {
        // Vanilla
        if (!General.disableStoneOreGeneration.get()) {
            if (ManaInfused.enableStoneManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistStoneManaInfusedOre.get() && ManaInfused.temperatureBlacklistStoneManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistStoneManaInfusedOre.get() && !ManaInfused.temperatureBlacklistStoneManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistStoneManaInfusedOre.get() && ManaInfused.biomeBlacklistStoneManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistStoneManaInfusedOre.get() && !ManaInfused.biomeBlacklistStoneManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("stone", null, new BlockMatcher(Blocks.STONE)), BlockInit.STONE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeStoneManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkStoneManaInfusedOre.get(), ManaInfused.minHeightStoneManaInfusedOre.get(), 0, ManaInfused.maxHeightStoneManaInfusedOre.get()))));
                    } } } }
        if (!General.disableAndesiteOreGeneration.get()) {
            if (ManaInfused.enableAndesiteManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistAndesiteManaInfusedOre.get() && ManaInfused.temperatureBlacklistAndesiteManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistAndesiteManaInfusedOre.get() && !ManaInfused.temperatureBlacklistAndesiteManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistAndesiteManaInfusedOre.get() && ManaInfused.biomeBlacklistAndesiteManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistAndesiteManaInfusedOre.get() && !ManaInfused.biomeBlacklistAndesiteManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("andesite", null, new BlockMatcher(Blocks.ANDESITE)), BlockInit.ANDESITE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeAndesiteManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkAndesiteManaInfusedOre.get(), ManaInfused.minHeightAndesiteManaInfusedOre.get(), 0, ManaInfused.maxHeightAndesiteManaInfusedOre.get()))));
                    } } } }
        if (!General.disableDioriteOreGeneration.get()) {
            if (ManaInfused.enableDioriteManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistDioriteManaInfusedOre.get() && ManaInfused.temperatureBlacklistDioriteManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistDioriteManaInfusedOre.get() && !ManaInfused.temperatureBlacklistDioriteManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistDioriteManaInfusedOre.get() && ManaInfused.biomeBlacklistDioriteManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistDioriteManaInfusedOre.get() && !ManaInfused.biomeBlacklistDioriteManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("diorite", null, new BlockMatcher(Blocks.DIORITE)), BlockInit.DIORITE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeDioriteManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkDioriteManaInfusedOre.get(), ManaInfused.minHeightDioriteManaInfusedOre.get(), 0, ManaInfused.maxHeightDioriteManaInfusedOre.get()))));
                    } } } }
        if (!General.disableGraniteOreGeneration.get()) {
            if (ManaInfused.enableGraniteManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistGraniteManaInfusedOre.get() && ManaInfused.temperatureBlacklistGraniteManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistGraniteManaInfusedOre.get() && !ManaInfused.temperatureBlacklistGraniteManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistGraniteManaInfusedOre.get() && ManaInfused.biomeBlacklistGraniteManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistGraniteManaInfusedOre.get() && !ManaInfused.biomeBlacklistGraniteManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("granite", null, new BlockMatcher(Blocks.GRANITE)), BlockInit.GRANITE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeGraniteManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkGraniteManaInfusedOre.get(), ManaInfused.minHeightGraniteManaInfusedOre.get(), 0, ManaInfused.maxHeightGraniteManaInfusedOre.get()))));
                    } } } }
        if (!General.disableNetherrackOreGeneration.get()) {
            if (ManaInfused.enableNetherrackManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistNetherrackManaInfusedOre.get() && ManaInfused.temperatureBlacklistNetherrackManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistNetherrackManaInfusedOre.get() && !ManaInfused.temperatureBlacklistNetherrackManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistNetherrackManaInfusedOre.get() && ManaInfused.biomeBlacklistNetherrackManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistNetherrackManaInfusedOre.get() && !ManaInfused.biomeBlacklistNetherrackManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("netherrack", null, new BlockMatcher(Blocks.NETHERRACK)), BlockInit.NETHERRACK_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeNetherrackManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkNetherrackManaInfusedOre.get(), ManaInfused.minHeightNetherrackManaInfusedOre.get(), 0, ManaInfused.maxHeightNetherrackManaInfusedOre.get()))));
                    } } } }
        if (!General.disableEndStoneOreGeneration.get()) {
            if (ManaInfused.enableEndStoneManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistEndStoneManaInfusedOre.get() && ManaInfused.temperatureBlacklistEndStoneManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistEndStoneManaInfusedOre.get() && !ManaInfused.temperatureBlacklistEndStoneManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistEndStoneManaInfusedOre.get() && ManaInfused.biomeBlacklistEndStoneManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistEndStoneManaInfusedOre.get() && !ManaInfused.biomeBlacklistEndStoneManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("end_stone", null, new BlockMatcher(Blocks.END_STONE)), BlockInit.END_STONE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeEndStoneManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkEndStoneManaInfusedOre.get(), ManaInfused.minHeightEndStoneManaInfusedOre.get(), 0, ManaInfused.maxHeightEndStoneManaInfusedOre.get()))));
                    } } } }
        if (!General.disableSandOreGeneration.get()) {
            if (ManaInfused.enableSandManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistSandManaInfusedOre.get() && ManaInfused.temperatureBlacklistSandManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistSandManaInfusedOre.get() && !ManaInfused.temperatureBlacklistSandManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistSandManaInfusedOre.get() && ManaInfused.biomeBlacklistSandManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistSandManaInfusedOre.get() && !ManaInfused.biomeBlacklistSandManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("sand", null, new BlockMatcher(Blocks.SAND)), BlockInit.SAND_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeSandManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkSandManaInfusedOre.get(), ManaInfused.minHeightSandManaInfusedOre.get(), 0, ManaInfused.maxHeightSandManaInfusedOre.get()))));
                    } } } }
        if (!General.disableRedSandOreGeneration.get()) {
            if (ManaInfused.enableRedSandManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistRedSandManaInfusedOre.get() && ManaInfused.temperatureBlacklistRedSandManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistRedSandManaInfusedOre.get() && !ManaInfused.temperatureBlacklistRedSandManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistRedSandManaInfusedOre.get() && ManaInfused.biomeBlacklistRedSandManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistRedSandManaInfusedOre.get() && !ManaInfused.biomeBlacklistRedSandManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("red_sand", null, new BlockMatcher(Blocks.RED_SAND)), BlockInit.RED_SAND_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeRedSandManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkRedSandManaInfusedOre.get(), ManaInfused.minHeightRedSandManaInfusedOre.get(), 0, ManaInfused.maxHeightRedSandManaInfusedOre.get()))));
                    } } } }
        if (!General.disableGravelOreGeneration.get()) {
            if (ManaInfused.enableGravelManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistGravelManaInfusedOre.get() && ManaInfused.temperatureBlacklistGravelManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistGravelManaInfusedOre.get() && !ManaInfused.temperatureBlacklistGravelManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistGravelManaInfusedOre.get() && ManaInfused.biomeBlacklistGravelManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistGravelManaInfusedOre.get() && !ManaInfused.biomeBlacklistGravelManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("gravel", null, new BlockMatcher(Blocks.GRAVEL)), BlockInit.GRAVEL_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeGravelManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkGravelManaInfusedOre.get(), ManaInfused.minHeightGravelManaInfusedOre.get(), 0, ManaInfused.maxHeightGravelManaInfusedOre.get()))));
                    } } } }
        if (!General.disableSandstoneOreGeneration.get()) {
            if (ManaInfused.enableSandstoneManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistSandstoneManaInfusedOre.get() && ManaInfused.temperatureBlacklistSandstoneManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistSandstoneManaInfusedOre.get() && !ManaInfused.temperatureBlacklistSandstoneManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistSandstoneManaInfusedOre.get() && ManaInfused.biomeBlacklistSandstoneManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistSandstoneManaInfusedOre.get() && !ManaInfused.biomeBlacklistSandstoneManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("sandstone", null, new BlockMatcher(Blocks.SANDSTONE)), BlockInit.SANDSTONE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeSandstoneManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkSandstoneManaInfusedOre.get(), ManaInfused.minHeightSandstoneManaInfusedOre.get(), 0, ManaInfused.maxHeightSandstoneManaInfusedOre.get()))));
                    } } } }
        if (!General.disableRedSandstoneOreGeneration.get()) {
            if (ManaInfused.enableRedSandstoneManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistRedSandstoneManaInfusedOre.get() && ManaInfused.temperatureBlacklistRedSandstoneManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistRedSandstoneManaInfusedOre.get() && !ManaInfused.temperatureBlacklistRedSandstoneManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistRedSandstoneManaInfusedOre.get() && ManaInfused.biomeBlacklistRedSandstoneManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistRedSandstoneManaInfusedOre.get() && !ManaInfused.biomeBlacklistRedSandstoneManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("red_sandstone", null, new BlockMatcher(Blocks.RED_SANDSTONE)), BlockInit.RED_SANDSTONE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeRedSandstoneManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkRedSandstoneManaInfusedOre.get(), ManaInfused.minHeightRedSandstoneManaInfusedOre.get(), 0, ManaInfused.maxHeightRedSandstoneManaInfusedOre.get()))));
                    } } } }
        if (!General.disableBlueIceOreGeneration.get()) {
            if (ManaInfused.enableBlueIceManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistBlueIceManaInfusedOre.get() && ManaInfused.temperatureBlacklistBlueIceManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistBlueIceManaInfusedOre.get() && !ManaInfused.temperatureBlacklistBlueIceManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistBlueIceManaInfusedOre.get() && ManaInfused.biomeBlacklistBlueIceManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistBlueIceManaInfusedOre.get() && !ManaInfused.biomeBlacklistBlueIceManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("blue_ice", null, new BlockMatcher(Blocks.BLUE_ICE)), BlockInit.BLUE_ICE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeBlueIceManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkBlueIceManaInfusedOre.get(), ManaInfused.minHeightBlueIceManaInfusedOre.get(), 0, ManaInfused.maxHeightBlueIceManaInfusedOre.get()))));
                    } } } }
        if (!General.disablePackedIceOreGeneration.get()) {
            if (ManaInfused.enablePackedIceManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistPackedIceManaInfusedOre.get() && ManaInfused.temperatureBlacklistPackedIceManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistPackedIceManaInfusedOre.get() && !ManaInfused.temperatureBlacklistPackedIceManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistPackedIceManaInfusedOre.get() && ManaInfused.biomeBlacklistPackedIceManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistPackedIceManaInfusedOre.get() && !ManaInfused.biomeBlacklistPackedIceManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("packed_ice", null, new BlockMatcher(Blocks.PACKED_ICE)), BlockInit.PACKED_ICE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizePackedIceManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkPackedIceManaInfusedOre.get(), ManaInfused.minHeightPackedIceManaInfusedOre.get(), 0, ManaInfused.maxHeightPackedIceManaInfusedOre.get()))));
                    } } } }
        if (!General.disableBedrockOreGeneration.get()) {
            if (ManaInfused.enableBedrockManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistBedrockManaInfusedOre.get() && ManaInfused.temperatureBlacklistBedrockManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistBedrockManaInfusedOre.get() && !ManaInfused.temperatureBlacklistBedrockManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistBedrockManaInfusedOre.get() && ManaInfused.biomeBlacklistBedrockManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistBedrockManaInfusedOre.get() && !ManaInfused.biomeBlacklistBedrockManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("bedrock", null, new BlockMatcher(Blocks.BEDROCK)), BlockInit.BEDROCK_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeBedrockManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkBedrockManaInfusedOre.get(), ManaInfused.minHeightBedrockManaInfusedOre.get(), 0, ManaInfused.maxHeightBedrockManaInfusedOre.get()))));
                    } } } }
        // Quark
        if (!General.disableQuarkBasaltOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableQuarkBasaltManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistQuarkBasaltManaInfusedOre.get() && ManaInfused.temperatureBlacklistQuarkBasaltManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistQuarkBasaltManaInfusedOre.get() && !ManaInfused.temperatureBlacklistQuarkBasaltManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistQuarkBasaltManaInfusedOre.get() && ManaInfused.biomeBlacklistQuarkBasaltManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistQuarkBasaltManaInfusedOre.get() && !ManaInfused.biomeBlacklistQuarkBasaltManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_basalt", null, new BlockMatcher(BlockInit.QUARK_BASALT != null ? BlockInit.QUARK_BASALT : Blocks.BARRIER)), BlockInit.QUARK_BASALT_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeQuarkBasaltManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkQuarkBasaltManaInfusedOre.get(), ManaInfused.minHeightQuarkBasaltManaInfusedOre.get(), 0, ManaInfused.maxHeightQuarkBasaltManaInfusedOre.get()))));
                    } } } }
        if (!General.disableQuarkMarbleOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableQuarkMarbleManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistQuarkMarbleManaInfusedOre.get() && ManaInfused.temperatureBlacklistQuarkMarbleManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistQuarkMarbleManaInfusedOre.get() && !ManaInfused.temperatureBlacklistQuarkMarbleManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistQuarkMarbleManaInfusedOre.get() && ManaInfused.biomeBlacklistQuarkMarbleManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistQuarkMarbleManaInfusedOre.get() && !ManaInfused.biomeBlacklistQuarkMarbleManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_marble", null, new BlockMatcher(BlockInit.QUARK_MARBLE != null ? BlockInit.QUARK_MARBLE : Blocks.BARRIER)), BlockInit.QUARK_MARBLE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeQuarkMarbleManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkQuarkMarbleManaInfusedOre.get(), ManaInfused.minHeightQuarkMarbleManaInfusedOre.get(), 0, ManaInfused.maxHeightQuarkMarbleManaInfusedOre.get()))));
                    } } } }
        if (!General.disableQuarkSlateOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableQuarkSlateManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistQuarkSlateManaInfusedOre.get() && ManaInfused.temperatureBlacklistQuarkSlateManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistQuarkSlateManaInfusedOre.get() && !ManaInfused.temperatureBlacklistQuarkSlateManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistQuarkSlateManaInfusedOre.get() && ManaInfused.biomeBlacklistQuarkSlateManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistQuarkSlateManaInfusedOre.get() && !ManaInfused.biomeBlacklistQuarkSlateManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_slate", null, new BlockMatcher(BlockInit.QUARK_SLATE != null ? BlockInit.QUARK_SLATE : Blocks.BARRIER)), BlockInit.QUARK_SLATE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeQuarkSlateManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkQuarkSlateManaInfusedOre.get(), ManaInfused.minHeightQuarkSlateManaInfusedOre.get(), 0, ManaInfused.maxHeightQuarkSlateManaInfusedOre.get()))));
                    } } } }
        if (!General.disableQuarkLimestoneOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableQuarkLimestoneManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistQuarkLimestoneManaInfusedOre.get() && ManaInfused.temperatureBlacklistQuarkLimestoneManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistQuarkLimestoneManaInfusedOre.get() && !ManaInfused.temperatureBlacklistQuarkLimestoneManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistQuarkLimestoneManaInfusedOre.get() && ManaInfused.biomeBlacklistQuarkLimestoneManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistQuarkLimestoneManaInfusedOre.get() && !ManaInfused.biomeBlacklistQuarkLimestoneManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_limestone", null, new BlockMatcher(BlockInit.QUARK_LIMESTONE != null ? BlockInit.QUARK_LIMESTONE : Blocks.BARRIER)), BlockInit.QUARK_LIMESTONE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeQuarkLimestoneManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkQuarkLimestoneManaInfusedOre.get(), ManaInfused.minHeightQuarkLimestoneManaInfusedOre.get(), 0, ManaInfused.maxHeightQuarkLimestoneManaInfusedOre.get()))));
                    } } } }
        if (!General.disableQuarkJasperOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableQuarkJasperManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistQuarkJasperManaInfusedOre.get() && ManaInfused.temperatureBlacklistQuarkJasperManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistQuarkJasperManaInfusedOre.get() && !ManaInfused.temperatureBlacklistQuarkJasperManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistQuarkJasperManaInfusedOre.get() && ManaInfused.biomeBlacklistQuarkJasperManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistQuarkJasperManaInfusedOre.get() && !ManaInfused.biomeBlacklistQuarkJasperManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_jasper", null, new BlockMatcher(BlockInit.QUARK_JASPER != null ? BlockInit.QUARK_JASPER : Blocks.BARRIER)), BlockInit.QUARK_JASPER_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeQuarkJasperManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkQuarkJasperManaInfusedOre.get(), ManaInfused.minHeightQuarkJasperManaInfusedOre.get(), 0, ManaInfused.maxHeightQuarkJasperManaInfusedOre.get()))));
                    } } } }
        // Embellishcraft
        if (!General.disableEmbellishcraftBasaltOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableEmbellishcraftBasaltManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistEmbellishcraftBasaltManaInfusedOre.get() && ManaInfused.temperatureBlacklistEmbellishcraftBasaltManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistEmbellishcraftBasaltManaInfusedOre.get() && !ManaInfused.temperatureBlacklistEmbellishcraftBasaltManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistEmbellishcraftBasaltManaInfusedOre.get() && ManaInfused.biomeBlacklistEmbellishcraftBasaltManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistEmbellishcraftBasaltManaInfusedOre.get() && !ManaInfused.biomeBlacklistEmbellishcraftBasaltManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_basalt", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_BASALT != null ? BlockInit.EMBELLISHCRAFT_BASALT : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_BASALT_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeEmbellishcraftBasaltManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkEmbellishcraftBasaltManaInfusedOre.get(), ManaInfused.minHeightEmbellishcraftBasaltManaInfusedOre.get(), 0, ManaInfused.maxHeightEmbellishcraftBasaltManaInfusedOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftGneissOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableEmbellishcraftGneissManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistEmbellishcraftGneissManaInfusedOre.get() && ManaInfused.temperatureBlacklistEmbellishcraftGneissManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistEmbellishcraftGneissManaInfusedOre.get() && !ManaInfused.temperatureBlacklistEmbellishcraftGneissManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistEmbellishcraftGneissManaInfusedOre.get() && ManaInfused.biomeBlacklistEmbellishcraftGneissManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistEmbellishcraftGneissManaInfusedOre.get() && !ManaInfused.biomeBlacklistEmbellishcraftGneissManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_gneiss", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_GNEISS != null ? BlockInit.EMBELLISHCRAFT_GNEISS : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_GNEISS_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeEmbellishcraftGneissManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkEmbellishcraftGneissManaInfusedOre.get(), ManaInfused.minHeightEmbellishcraftGneissManaInfusedOre.get(), 0, ManaInfused.maxHeightEmbellishcraftGneissManaInfusedOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftJadeOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableEmbellishcraftJadeManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistEmbellishcraftJadeManaInfusedOre.get() && ManaInfused.temperatureBlacklistEmbellishcraftJadeManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistEmbellishcraftJadeManaInfusedOre.get() && !ManaInfused.temperatureBlacklistEmbellishcraftJadeManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistEmbellishcraftJadeManaInfusedOre.get() && ManaInfused.biomeBlacklistEmbellishcraftJadeManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistEmbellishcraftJadeManaInfusedOre.get() && !ManaInfused.biomeBlacklistEmbellishcraftJadeManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_jade", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_JADE != null ? BlockInit.EMBELLISHCRAFT_JADE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_JADE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeEmbellishcraftJadeManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkEmbellishcraftJadeManaInfusedOre.get(), ManaInfused.minHeightEmbellishcraftJadeManaInfusedOre.get(), 0, ManaInfused.maxHeightEmbellishcraftJadeManaInfusedOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftLarvikiteOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableEmbellishcraftLarvikiteManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistEmbellishcraftLarvikiteManaInfusedOre.get() && ManaInfused.temperatureBlacklistEmbellishcraftLarvikiteManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistEmbellishcraftLarvikiteManaInfusedOre.get() && !ManaInfused.temperatureBlacklistEmbellishcraftLarvikiteManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistEmbellishcraftLarvikiteManaInfusedOre.get() && ManaInfused.biomeBlacklistEmbellishcraftLarvikiteManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistEmbellishcraftLarvikiteManaInfusedOre.get() && !ManaInfused.biomeBlacklistEmbellishcraftLarvikiteManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_larvikite", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_LARVIKITE != null ? BlockInit.EMBELLISHCRAFT_LARVIKITE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_LARVIKITE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeEmbellishcraftLarvikiteManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkEmbellishcraftLarvikiteManaInfusedOre.get(), ManaInfused.minHeightEmbellishcraftLarvikiteManaInfusedOre.get(), 0, ManaInfused.maxHeightEmbellishcraftLarvikiteManaInfusedOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftMarbleOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableEmbellishcraftMarbleManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistEmbellishcraftMarbleManaInfusedOre.get() && ManaInfused.temperatureBlacklistEmbellishcraftMarbleManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistEmbellishcraftMarbleManaInfusedOre.get() && !ManaInfused.temperatureBlacklistEmbellishcraftMarbleManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistEmbellishcraftMarbleManaInfusedOre.get() && ManaInfused.biomeBlacklistEmbellishcraftMarbleManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistEmbellishcraftMarbleManaInfusedOre.get() && !ManaInfused.biomeBlacklistEmbellishcraftMarbleManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_marble", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_MARBLE != null ? BlockInit.EMBELLISHCRAFT_MARBLE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_MARBLE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeEmbellishcraftMarbleManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkEmbellishcraftMarbleManaInfusedOre.get(), ManaInfused.minHeightEmbellishcraftMarbleManaInfusedOre.get(), 0, ManaInfused.maxHeightEmbellishcraftMarbleManaInfusedOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftSlateOreGeneration.get() && Main.quark) {
            if (ManaInfused.enableEmbellishcraftSlateManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistEmbellishcraftSlateManaInfusedOre.get() && ManaInfused.temperatureBlacklistEmbellishcraftSlateManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistEmbellishcraftSlateManaInfusedOre.get() && !ManaInfused.temperatureBlacklistEmbellishcraftSlateManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistEmbellishcraftSlateManaInfusedOre.get() && ManaInfused.biomeBlacklistEmbellishcraftSlateManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistEmbellishcraftSlateManaInfusedOre.get() && !ManaInfused.biomeBlacklistEmbellishcraftSlateManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_slate", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_SLATE != null ? BlockInit.EMBELLISHCRAFT_SLATE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_SLATE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeEmbellishcraftSlateManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkEmbellishcraftSlateManaInfusedOre.get(), ManaInfused.minHeightEmbellishcraftSlateManaInfusedOre.get(), 0, ManaInfused.maxHeightEmbellishcraftSlateManaInfusedOre.get()))));
                    } } } }
        // Danny's Ores
        if (!General.disableHardenedStoneOreGeneration.get()) {
            if (ManaInfused.enableHardenedStoneManaInfusedOre.get()) {
                if ((ManaInfused.isTempWhitelistHardenedStoneManaInfusedOre.get() && ManaInfused.temperatureBlacklistHardenedStoneManaInfusedOre.get().contains(biomeTS)) || (!ManaInfused.isTempWhitelistHardenedStoneManaInfusedOre.get() && !ManaInfused.temperatureBlacklistHardenedStoneManaInfusedOre.get().contains(biomeTS))) {
                    if ((ManaInfused.isBiomeWhitelistHardenedStoneManaInfusedOre.get() && ManaInfused.biomeBlacklistHardenedStoneManaInfusedOre.get().contains(biomeRNS)) || (!ManaInfused.isBiomeWhitelistHardenedStoneManaInfusedOre.get() && !ManaInfused.biomeBlacklistHardenedStoneManaInfusedOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("hardened_stone", null, new BlockMatcher(BlockInit.HARDENED_STONE.get())), BlockInit.HARDENED_STONE_MANA_INFUSED_ORE.get().getDefaultState(), ManaInfused.veinSizeHardenedStoneManaInfusedOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(ManaInfused.veinsPerChunkHardenedStoneManaInfusedOre.get(), ManaInfused.minHeightHardenedStoneManaInfusedOre.get(), 0, ManaInfused.maxHeightHardenedStoneManaInfusedOre.get()))));
                    } } } }
    }
}
