package com.danny.dannys_ores.generation;

import com.danny.dannys_ores.Main;
import com.danny.dannys_ores.configs.BlackQuartz;
import com.danny.dannys_ores.configs.General;
import com.danny.dannys_ores.init.BlockInit;
import net.minecraft.block.Blocks;
import net.minecraft.block.pattern.BlockMatcher;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.GenerationStage;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.OreFeatureConfig;
import net.minecraft.world.gen.placement.CountRangeConfig;
import net.minecraft.world.gen.placement.Placement;

public class BlackQuartzGen {

    public static void addBlackQuartzGen(Biome biome, String biomeRNS, String biomeTS) {
        addBlackQuartzOreGeneration(biome, biomeRNS, biomeTS);
    }

    private static void addBlackQuartzOreGeneration(Biome biome, String biomeRNS, String biomeTS) {
        // Vanilla
        if (!General.disableStoneOreGeneration.get()) {
            if (BlackQuartz.enableStoneBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistStoneBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistStoneBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistStoneBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistStoneBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistStoneBlackQuartzOre.get() && BlackQuartz.biomeBlacklistStoneBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistStoneBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistStoneBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("stone", null, new BlockMatcher(Blocks.STONE)), BlockInit.STONE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeStoneBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkStoneBlackQuartzOre.get(), BlackQuartz.minHeightStoneBlackQuartzOre.get(), 0, BlackQuartz.maxHeightStoneBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableAndesiteOreGeneration.get()) {
            if (BlackQuartz.enableAndesiteBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistAndesiteBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistAndesiteBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistAndesiteBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistAndesiteBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistAndesiteBlackQuartzOre.get() && BlackQuartz.biomeBlacklistAndesiteBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistAndesiteBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistAndesiteBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("andesite", null, new BlockMatcher(Blocks.ANDESITE)), BlockInit.ANDESITE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeAndesiteBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkAndesiteBlackQuartzOre.get(), BlackQuartz.minHeightAndesiteBlackQuartzOre.get(), 0, BlackQuartz.maxHeightAndesiteBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableDioriteOreGeneration.get()) {
            if (BlackQuartz.enableDioriteBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistDioriteBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistDioriteBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistDioriteBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistDioriteBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistDioriteBlackQuartzOre.get() && BlackQuartz.biomeBlacklistDioriteBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistDioriteBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistDioriteBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("diorite", null, new BlockMatcher(Blocks.DIORITE)), BlockInit.DIORITE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeDioriteBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkDioriteBlackQuartzOre.get(), BlackQuartz.minHeightDioriteBlackQuartzOre.get(), 0, BlackQuartz.maxHeightDioriteBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableGraniteOreGeneration.get()) {
            if (BlackQuartz.enableGraniteBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistGraniteBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistGraniteBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistGraniteBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistGraniteBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistGraniteBlackQuartzOre.get() && BlackQuartz.biomeBlacklistGraniteBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistGraniteBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistGraniteBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("granite", null, new BlockMatcher(Blocks.GRANITE)), BlockInit.GRANITE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeGraniteBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkGraniteBlackQuartzOre.get(), BlackQuartz.minHeightGraniteBlackQuartzOre.get(), 0, BlackQuartz.maxHeightGraniteBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableNetherrackOreGeneration.get()) {
            if (BlackQuartz.enableNetherrackBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistNetherrackBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistNetherrackBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistNetherrackBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistNetherrackBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistNetherrackBlackQuartzOre.get() && BlackQuartz.biomeBlacklistNetherrackBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistNetherrackBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistNetherrackBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("netherrack", null, new BlockMatcher(Blocks.NETHERRACK)), BlockInit.NETHERRACK_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeNetherrackBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkNetherrackBlackQuartzOre.get(), BlackQuartz.minHeightNetherrackBlackQuartzOre.get(), 0, BlackQuartz.maxHeightNetherrackBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableEndStoneOreGeneration.get()) {
            if (BlackQuartz.enableEndStoneBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistEndStoneBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistEndStoneBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistEndStoneBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistEndStoneBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistEndStoneBlackQuartzOre.get() && BlackQuartz.biomeBlacklistEndStoneBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistEndStoneBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistEndStoneBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("end_stone", null, new BlockMatcher(Blocks.END_STONE)), BlockInit.END_STONE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeEndStoneBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkEndStoneBlackQuartzOre.get(), BlackQuartz.minHeightEndStoneBlackQuartzOre.get(), 0, BlackQuartz.maxHeightEndStoneBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableSandOreGeneration.get()) {
            if (BlackQuartz.enableSandBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistSandBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistSandBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistSandBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistSandBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistSandBlackQuartzOre.get() && BlackQuartz.biomeBlacklistSandBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistSandBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistSandBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("sand", null, new BlockMatcher(Blocks.SAND)), BlockInit.SAND_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeSandBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkSandBlackQuartzOre.get(), BlackQuartz.minHeightSandBlackQuartzOre.get(), 0, BlackQuartz.maxHeightSandBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableRedSandOreGeneration.get()) {
            if (BlackQuartz.enableRedSandBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistRedSandBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistRedSandBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistRedSandBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistRedSandBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistRedSandBlackQuartzOre.get() && BlackQuartz.biomeBlacklistRedSandBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistRedSandBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistRedSandBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("red_sand", null, new BlockMatcher(Blocks.RED_SAND)), BlockInit.RED_SAND_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeRedSandBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkRedSandBlackQuartzOre.get(), BlackQuartz.minHeightRedSandBlackQuartzOre.get(), 0, BlackQuartz.maxHeightRedSandBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableGravelOreGeneration.get()) {
            if (BlackQuartz.enableGravelBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistGravelBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistGravelBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistGravelBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistGravelBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistGravelBlackQuartzOre.get() && BlackQuartz.biomeBlacklistGravelBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistGravelBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistGravelBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("gravel", null, new BlockMatcher(Blocks.GRAVEL)), BlockInit.GRAVEL_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeGravelBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkGravelBlackQuartzOre.get(), BlackQuartz.minHeightGravelBlackQuartzOre.get(), 0, BlackQuartz.maxHeightGravelBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableSandstoneOreGeneration.get()) {
            if (BlackQuartz.enableSandstoneBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistSandstoneBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistSandstoneBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistSandstoneBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistSandstoneBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistSandstoneBlackQuartzOre.get() && BlackQuartz.biomeBlacklistSandstoneBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistSandstoneBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistSandstoneBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("sandstone", null, new BlockMatcher(Blocks.SANDSTONE)), BlockInit.SANDSTONE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeSandstoneBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkSandstoneBlackQuartzOre.get(), BlackQuartz.minHeightSandstoneBlackQuartzOre.get(), 0, BlackQuartz.maxHeightSandstoneBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableRedSandstoneOreGeneration.get()) {
            if (BlackQuartz.enableRedSandstoneBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistRedSandstoneBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistRedSandstoneBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistRedSandstoneBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistRedSandstoneBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistRedSandstoneBlackQuartzOre.get() && BlackQuartz.biomeBlacklistRedSandstoneBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistRedSandstoneBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistRedSandstoneBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("red_sandstone", null, new BlockMatcher(Blocks.RED_SANDSTONE)), BlockInit.RED_SANDSTONE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeRedSandstoneBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkRedSandstoneBlackQuartzOre.get(), BlackQuartz.minHeightRedSandstoneBlackQuartzOre.get(), 0, BlackQuartz.maxHeightRedSandstoneBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableBlueIceOreGeneration.get()) {
            if (BlackQuartz.enableBlueIceBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistBlueIceBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistBlueIceBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistBlueIceBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistBlueIceBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistBlueIceBlackQuartzOre.get() && BlackQuartz.biomeBlacklistBlueIceBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistBlueIceBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistBlueIceBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("blue_ice", null, new BlockMatcher(Blocks.BLUE_ICE)), BlockInit.BLUE_ICE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeBlueIceBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkBlueIceBlackQuartzOre.get(), BlackQuartz.minHeightBlueIceBlackQuartzOre.get(), 0, BlackQuartz.maxHeightBlueIceBlackQuartzOre.get()))));
                    } } } }
        if (!General.disablePackedIceOreGeneration.get()) {
            if (BlackQuartz.enablePackedIceBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistPackedIceBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistPackedIceBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistPackedIceBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistPackedIceBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistPackedIceBlackQuartzOre.get() && BlackQuartz.biomeBlacklistPackedIceBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistPackedIceBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistPackedIceBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("packed_ice", null, new BlockMatcher(Blocks.PACKED_ICE)), BlockInit.PACKED_ICE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizePackedIceBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkPackedIceBlackQuartzOre.get(), BlackQuartz.minHeightPackedIceBlackQuartzOre.get(), 0, BlackQuartz.maxHeightPackedIceBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableBedrockOreGeneration.get()) {
            if (BlackQuartz.enableBedrockBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistBedrockBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistBedrockBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistBedrockBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistBedrockBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistBedrockBlackQuartzOre.get() && BlackQuartz.biomeBlacklistBedrockBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistBedrockBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistBedrockBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("bedrock", null, new BlockMatcher(Blocks.BEDROCK)), BlockInit.BEDROCK_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeBedrockBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkBedrockBlackQuartzOre.get(), BlackQuartz.minHeightBedrockBlackQuartzOre.get(), 0, BlackQuartz.maxHeightBedrockBlackQuartzOre.get()))));
                    } } } }
        // Quark
        if (!General.disableQuarkBasaltOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableQuarkBasaltBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistQuarkBasaltBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistQuarkBasaltBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistQuarkBasaltBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistQuarkBasaltBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistQuarkBasaltBlackQuartzOre.get() && BlackQuartz.biomeBlacklistQuarkBasaltBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistQuarkBasaltBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistQuarkBasaltBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_basalt", null, new BlockMatcher(BlockInit.QUARK_BASALT != null ? BlockInit.QUARK_BASALT : Blocks.BARRIER)), BlockInit.QUARK_BASALT_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeQuarkBasaltBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkQuarkBasaltBlackQuartzOre.get(), BlackQuartz.minHeightQuarkBasaltBlackQuartzOre.get(), 0, BlackQuartz.maxHeightQuarkBasaltBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableQuarkMarbleOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableQuarkMarbleBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistQuarkMarbleBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistQuarkMarbleBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistQuarkMarbleBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistQuarkMarbleBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistQuarkMarbleBlackQuartzOre.get() && BlackQuartz.biomeBlacklistQuarkMarbleBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistQuarkMarbleBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistQuarkMarbleBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_marble", null, new BlockMatcher(BlockInit.QUARK_MARBLE != null ? BlockInit.QUARK_MARBLE : Blocks.BARRIER)), BlockInit.QUARK_MARBLE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeQuarkMarbleBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkQuarkMarbleBlackQuartzOre.get(), BlackQuartz.minHeightQuarkMarbleBlackQuartzOre.get(), 0, BlackQuartz.maxHeightQuarkMarbleBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableQuarkSlateOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableQuarkSlateBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistQuarkSlateBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistQuarkSlateBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistQuarkSlateBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistQuarkSlateBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistQuarkSlateBlackQuartzOre.get() && BlackQuartz.biomeBlacklistQuarkSlateBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistQuarkSlateBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistQuarkSlateBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_slate", null, new BlockMatcher(BlockInit.QUARK_SLATE != null ? BlockInit.QUARK_SLATE : Blocks.BARRIER)), BlockInit.QUARK_SLATE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeQuarkSlateBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkQuarkSlateBlackQuartzOre.get(), BlackQuartz.minHeightQuarkSlateBlackQuartzOre.get(), 0, BlackQuartz.maxHeightQuarkSlateBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableQuarkLimestoneOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableQuarkLimestoneBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistQuarkLimestoneBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistQuarkLimestoneBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistQuarkLimestoneBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistQuarkLimestoneBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistQuarkLimestoneBlackQuartzOre.get() && BlackQuartz.biomeBlacklistQuarkLimestoneBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistQuarkLimestoneBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistQuarkLimestoneBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_limestone", null, new BlockMatcher(BlockInit.QUARK_LIMESTONE != null ? BlockInit.QUARK_LIMESTONE : Blocks.BARRIER)), BlockInit.QUARK_LIMESTONE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeQuarkLimestoneBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkQuarkLimestoneBlackQuartzOre.get(), BlackQuartz.minHeightQuarkLimestoneBlackQuartzOre.get(), 0, BlackQuartz.maxHeightQuarkLimestoneBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableQuarkJasperOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableQuarkJasperBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistQuarkJasperBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistQuarkJasperBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistQuarkJasperBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistQuarkJasperBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistQuarkJasperBlackQuartzOre.get() && BlackQuartz.biomeBlacklistQuarkJasperBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistQuarkJasperBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistQuarkJasperBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("quark_jasper", null, new BlockMatcher(BlockInit.QUARK_JASPER != null ? BlockInit.QUARK_JASPER : Blocks.BARRIER)), BlockInit.QUARK_JASPER_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeQuarkJasperBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkQuarkJasperBlackQuartzOre.get(), BlackQuartz.minHeightQuarkJasperBlackQuartzOre.get(), 0, BlackQuartz.maxHeightQuarkJasperBlackQuartzOre.get()))));
                    } } } }
        // Embellishcraft
        if (!General.disableEmbellishcraftBasaltOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableEmbellishcraftBasaltBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistEmbellishcraftBasaltBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistEmbellishcraftBasaltBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistEmbellishcraftBasaltBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistEmbellishcraftBasaltBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistEmbellishcraftBasaltBlackQuartzOre.get() && BlackQuartz.biomeBlacklistEmbellishcraftBasaltBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistEmbellishcraftBasaltBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistEmbellishcraftBasaltBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_basalt", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_BASALT != null ? BlockInit.EMBELLISHCRAFT_BASALT : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_BASALT_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeEmbellishcraftBasaltBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkEmbellishcraftBasaltBlackQuartzOre.get(), BlackQuartz.minHeightEmbellishcraftBasaltBlackQuartzOre.get(), 0, BlackQuartz.maxHeightEmbellishcraftBasaltBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftGneissOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableEmbellishcraftGneissBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistEmbellishcraftGneissBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistEmbellishcraftGneissBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistEmbellishcraftGneissBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistEmbellishcraftGneissBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistEmbellishcraftGneissBlackQuartzOre.get() && BlackQuartz.biomeBlacklistEmbellishcraftGneissBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistEmbellishcraftGneissBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistEmbellishcraftGneissBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_gneiss", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_GNEISS != null ? BlockInit.EMBELLISHCRAFT_GNEISS : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_GNEISS_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeEmbellishcraftGneissBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkEmbellishcraftGneissBlackQuartzOre.get(), BlackQuartz.minHeightEmbellishcraftGneissBlackQuartzOre.get(), 0, BlackQuartz.maxHeightEmbellishcraftGneissBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftJadeOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableEmbellishcraftJadeBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistEmbellishcraftJadeBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistEmbellishcraftJadeBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistEmbellishcraftJadeBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistEmbellishcraftJadeBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistEmbellishcraftJadeBlackQuartzOre.get() && BlackQuartz.biomeBlacklistEmbellishcraftJadeBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistEmbellishcraftJadeBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistEmbellishcraftJadeBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_jade", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_JADE != null ? BlockInit.EMBELLISHCRAFT_JADE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_JADE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeEmbellishcraftJadeBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkEmbellishcraftJadeBlackQuartzOre.get(), BlackQuartz.minHeightEmbellishcraftJadeBlackQuartzOre.get(), 0, BlackQuartz.maxHeightEmbellishcraftJadeBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftLarvikiteOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableEmbellishcraftLarvikiteBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistEmbellishcraftLarvikiteBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistEmbellishcraftLarvikiteBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistEmbellishcraftLarvikiteBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistEmbellishcraftLarvikiteBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistEmbellishcraftLarvikiteBlackQuartzOre.get() && BlackQuartz.biomeBlacklistEmbellishcraftLarvikiteBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistEmbellishcraftLarvikiteBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistEmbellishcraftLarvikiteBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_larvikite", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_LARVIKITE != null ? BlockInit.EMBELLISHCRAFT_LARVIKITE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_LARVIKITE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeEmbellishcraftLarvikiteBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkEmbellishcraftLarvikiteBlackQuartzOre.get(), BlackQuartz.minHeightEmbellishcraftLarvikiteBlackQuartzOre.get(), 0, BlackQuartz.maxHeightEmbellishcraftLarvikiteBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftMarbleOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableEmbellishcraftMarbleBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistEmbellishcraftMarbleBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistEmbellishcraftMarbleBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistEmbellishcraftMarbleBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistEmbellishcraftMarbleBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistEmbellishcraftMarbleBlackQuartzOre.get() && BlackQuartz.biomeBlacklistEmbellishcraftMarbleBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistEmbellishcraftMarbleBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistEmbellishcraftMarbleBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_marble", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_MARBLE != null ? BlockInit.EMBELLISHCRAFT_MARBLE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_MARBLE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeEmbellishcraftMarbleBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkEmbellishcraftMarbleBlackQuartzOre.get(), BlackQuartz.minHeightEmbellishcraftMarbleBlackQuartzOre.get(), 0, BlackQuartz.maxHeightEmbellishcraftMarbleBlackQuartzOre.get()))));
                    } } } }
        if (!General.disableEmbellishcraftSlateOreGeneration.get() && Main.quark) {
            if (BlackQuartz.enableEmbellishcraftSlateBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistEmbellishcraftSlateBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistEmbellishcraftSlateBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistEmbellishcraftSlateBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistEmbellishcraftSlateBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistEmbellishcraftSlateBlackQuartzOre.get() && BlackQuartz.biomeBlacklistEmbellishcraftSlateBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistEmbellishcraftSlateBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistEmbellishcraftSlateBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("embellishcraft_slate", null, new BlockMatcher(BlockInit.EMBELLISHCRAFT_SLATE != null ? BlockInit.EMBELLISHCRAFT_SLATE : Blocks.BARRIER)), BlockInit.EMBELLISHCRAFT_SLATE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeEmbellishcraftSlateBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkEmbellishcraftSlateBlackQuartzOre.get(), BlackQuartz.minHeightEmbellishcraftSlateBlackQuartzOre.get(), 0, BlackQuartz.maxHeightEmbellishcraftSlateBlackQuartzOre.get()))));
                    } } } }
        // Danny's Ores
        if (!General.disableHardenedStoneOreGeneration.get()) {
            if (BlackQuartz.enableHardenedStoneBlackQuartzOre.get()) {
                if ((BlackQuartz.isTempWhitelistHardenedStoneBlackQuartzOre.get() && BlackQuartz.temperatureBlacklistHardenedStoneBlackQuartzOre.get().contains(biomeTS)) || (!BlackQuartz.isTempWhitelistHardenedStoneBlackQuartzOre.get() && !BlackQuartz.temperatureBlacklistHardenedStoneBlackQuartzOre.get().contains(biomeTS))) {
                    if ((BlackQuartz.isBiomeWhitelistHardenedStoneBlackQuartzOre.get() && BlackQuartz.biomeBlacklistHardenedStoneBlackQuartzOre.get().contains(biomeRNS)) || (!BlackQuartz.isBiomeWhitelistHardenedStoneBlackQuartzOre.get() && !BlackQuartz.biomeBlacklistHardenedStoneBlackQuartzOre.get().contains(biomeRNS))) {
                        biome.addFeature(GenerationStage.Decoration.UNDERGROUND_DECORATION, Feature.ORE.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create("hardened_stone", null, new BlockMatcher(BlockInit.HARDENED_STONE.get())), BlockInit.HARDENED_STONE_BLACK_QUARTZ_ORE.get().getDefaultState(), BlackQuartz.veinSizeHardenedStoneBlackQuartzOre.get())).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(BlackQuartz.veinsPerChunkHardenedStoneBlackQuartzOre.get(), BlackQuartz.minHeightHardenedStoneBlackQuartzOre.get(), 0, BlackQuartz.maxHeightHardenedStoneBlackQuartzOre.get()))));
                    } } } }
    }
}
