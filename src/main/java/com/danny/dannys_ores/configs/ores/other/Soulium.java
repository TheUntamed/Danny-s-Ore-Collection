package com.danny.dannys_ores.configs.ores.other;

import com.danny.dannys_ores.Main;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.config.ModConfig;

import java.util.ArrayList;
import java.util.List;

public class Soulium {
    private static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec spec;
    public static ForgeConfigSpec.BooleanValue disableSouliumOres;

    public static ForgeConfigSpec.BooleanValue enableStoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeStoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkStoneSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightStoneSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightStoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistStoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistStoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistStoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistStoneSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableAndesiteSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeAndesiteSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkAndesiteSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightAndesiteSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightAndesiteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistAndesiteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistAndesiteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistAndesiteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistAndesiteSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableDioriteSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeDioriteSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkDioriteSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightDioriteSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightDioriteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistDioriteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistDioriteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistDioriteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistDioriteSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableGraniteSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeGraniteSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGraniteSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightGraniteSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightGraniteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGraniteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGraniteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGraniteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGraniteSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableNetherrackSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeNetherrackSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkNetherrackSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightNetherrackSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightNetherrackSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistNetherrackSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistNetherrackSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistNetherrackSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistNetherrackSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableEndStoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeEndStoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEndStoneSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightEndStoneSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightEndStoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEndStoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEndStoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEndStoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEndStoneSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableSandSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeSandSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightSandSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightSandSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableGravelSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeGravelSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGravelSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightGravelSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightGravelSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGravelSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGravelSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGravelSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGravelSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightSandstoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandstoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandstoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandstoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandstoneSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandstoneSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandstoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandstoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandstoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandstoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandstoneSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableBlueIceSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeBlueIceSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBlueIceSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightBlueIceSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightBlueIceSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBlueIceSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBlueIceSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBlueIceSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBlueIceSouliumOre;

    public static ForgeConfigSpec.BooleanValue enablePackedIceSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizePackedIceSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkPackedIceSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightPackedIceSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightPackedIceSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistPackedIceSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistPackedIceSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistPackedIceSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistPackedIceSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableBedrockSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeBedrockSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBedrockSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightBedrockSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightBedrockSouliumOre;
    public static ForgeConfigSpec.DoubleValue resistanceBedrockSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBedrockSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBedrockSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBedrockSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBedrockSouliumOre;

    // Quark
    public static ForgeConfigSpec.BooleanValue enableQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkBasaltSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkBasaltSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkLimestoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkLimestoneSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkJasperSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkJasperSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkJasperSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkJasperSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkJasperSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkJasperSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkJasperSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkJasperSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkJasperSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkMarbleSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkMarbleSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkSlateSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkSlateSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkSlateSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkSlateSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkSlateSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkSlateSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkSlateSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkSlateSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkSlateSouliumOre;

    // Embellishcraft
    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftBasaltSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftBasaltSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftGneissSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftGneissSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftJadeSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftJadeSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftMarbleSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftMarbleSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftLarvikiteSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftLarvikiteSouliumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftSlateSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftSlateSouliumOre;

    // Danny's Stone Variants
    public static ForgeConfigSpec.BooleanValue enableHardenedStoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinSizeHardenedStoneSouliumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkHardenedStoneSouliumOre;
    public static ForgeConfigSpec.IntValue minHeightHardenedStoneSouliumOre;
    public static ForgeConfigSpec.IntValue maxHeightHardenedStoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistHardenedStoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistHardenedStoneSouliumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistHardenedStoneSouliumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistHardenedStoneSouliumOre;

    static {
        // = BUILDER.comment("").define("", false);

        BUILDER.comment("Soulium Ores").push("general");
        disableSouliumOres = BUILDER.comment("If false, all soulium ore variants will be disabled.").define("disableAllVariants", false);
        BUILDER.comment("Stone Soulium Ore").push("stone_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableStoneSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeStoneSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkStoneSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightStoneSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightStoneSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistStoneSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistStoneSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistStoneSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistStoneSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Andesite Soulium Ore").push("andesite_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableAndesiteSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeAndesiteSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkAndesiteSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightAndesiteSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightAndesiteSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistAndesiteSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistAndesiteSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistAndesiteSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistAndesiteSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Diorite Soulium Ore").push("diorite_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableDioriteSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeDioriteSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkDioriteSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightDioriteSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightDioriteSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistDioriteSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistDioriteSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistDioriteSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistDioriteSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Granite Soulium Ore").push("granite_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableGraniteSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeGraniteSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkGraniteSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightGraniteSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightGraniteSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistGraniteSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistGraniteSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistGraniteSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistGraniteSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Netherrack Soulium Ore").push("netherrack_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableNetherrackSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeNetherrackSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkNetherrackSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightNetherrackSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 64, 0, 256);
        maxHeightNetherrackSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistNetherrackSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistNetherrackSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistNetherrackSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistNetherrackSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("End Stone Soulium Ore").push("end_stone_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableEndStoneSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeEndStoneSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkEndStoneSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightEndStoneSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightEndStoneSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 64, 0, 256);
        isTempWhitelistEndStoneSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistEndStoneSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistEndStoneSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistEndStoneSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sand Soulium Ore").push("sand_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableSandSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeSandSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkSandSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightSandSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightSandSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistSandSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistSandSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistSandSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistSandSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sand Soulium Ore").push("red_sand_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableRedSandSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeRedSandSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkRedSandSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightRedSandSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightRedSandSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistRedSandSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistRedSandSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistRedSandSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistRedSandSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gravel Soulium Ore").push("gravel_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableGravelSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeGravelSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkGravelSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightGravelSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightGravelSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistGravelSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistGravelSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistGravelSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistGravelSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sandstone Soulium Ore").push("sandstone_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableSandstoneSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeSandstoneSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkSandstoneSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightSandstoneSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightSandstoneSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistSandstoneSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistSandstoneSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistSandstoneSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistSandstoneSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sandstone Soulium Ore").push("red_sandstone_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableRedSandstoneSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeRedSandstoneSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkRedSandstoneSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightRedSandstoneSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightRedSandstoneSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistRedSandstoneSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistRedSandstoneSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistRedSandstoneSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistRedSandstoneSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Blue Ice Soulium Ore").push("blue_ice_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableBlueIceSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeBlueIceSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkBlueIceSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightBlueIceSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightBlueIceSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistBlueIceSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistBlueIceSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistBlueIceSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistBlueIceSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Packed Ice Soulium Ore").push("packed_ice_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enablePackedIceSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizePackedIceSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkPackedIceSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightPackedIceSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightPackedIceSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistPackedIceSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistPackedIceSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistPackedIceSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistPackedIceSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Bedrock Soulium Ore").push("bedrock_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableBedrockSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeBedrockSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 1, 0, 65536);
        veinsPerChunkBedrockSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 1, 0, 65536);
        minHeightBedrockSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightBedrockSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 256, 0, 256);
        isTempWhitelistBedrockSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistBedrockSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistBedrockSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistBedrockSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.comment("Block properties").push("properties");
        resistanceBedrockSouliumOre = BUILDER.comment("A higher value means a stronger explosion is needed to destroy this ore. Stone has 6.0 and Obsidian 1200.0").defineInRange("resistance", 9.0, 0.0, 3600000.0);
        BUILDER.pop();
        BUILDER.pop();

        //Quark
        BUILDER.comment("Basalt Soulium Ore (Quark)").push("quark_basalt_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableQuarkBasaltSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeQuarkBasaltSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 3, 0, 65536);
        veinsPerChunkQuarkBasaltSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightQuarkBasaltSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 64, 0, 256);
        maxHeightQuarkBasaltSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 128, 0, 256);
        isTempWhitelistQuarkBasaltSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistQuarkBasaltSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistQuarkBasaltSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistQuarkBasaltSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Limestone Soulium Ore (Quark)").push("quark_limestone_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableQuarkLimestoneSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeQuarkLimestoneSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkQuarkLimestoneSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightQuarkLimestoneSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightQuarkLimestoneSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistQuarkLimestoneSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistQuarkLimestoneSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistQuarkLimestoneSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistQuarkLimestoneSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jasper Soulium Ore (Quark)").push("quark_jasper_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableQuarkJasperSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeQuarkJasperSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkQuarkJasperSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightQuarkJasperSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightQuarkJasperSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistQuarkJasperSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistQuarkJasperSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistQuarkJasperSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistQuarkJasperSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Soulium Ore (Quark)").push("quark_marble_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableQuarkMarbleSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeQuarkMarbleSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkQuarkMarbleSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightQuarkMarbleSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightQuarkMarbleSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistQuarkMarbleSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistQuarkMarbleSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistQuarkMarbleSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistQuarkMarbleSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Soulium Ore (Quark)").push("quark_slate_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableQuarkSlateSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeQuarkSlateSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkQuarkSlateSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightQuarkSlateSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightQuarkSlateSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistQuarkSlateSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistQuarkSlateSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistQuarkSlateSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistQuarkSlateSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        //Embellishcraft
        BUILDER.comment("Basalt Soulium Ore (Embellishcraft)").push("embellishcraft_basalt_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableEmbellishcraftBasaltSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeEmbellishcraftBasaltSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkEmbellishcraftBasaltSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightEmbellishcraftBasaltSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightEmbellishcraftBasaltSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistEmbellishcraftBasaltSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistEmbellishcraftBasaltSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftBasaltSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistEmbellishcraftBasaltSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gneiss Soulium Ore (Embellishcraft)").push("embellishcraft_gneiss_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableEmbellishcraftGneissSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeEmbellishcraftGneissSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkEmbellishcraftGneissSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightEmbellishcraftGneissSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightEmbellishcraftGneissSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistEmbellishcraftGneissSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistEmbellishcraftGneissSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftGneissSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistEmbellishcraftGneissSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jade Soulium Ore (Embellishcraft)").push("embellishcraft_jade_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableEmbellishcraftJadeSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeEmbellishcraftJadeSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkEmbellishcraftJadeSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightEmbellishcraftJadeSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightEmbellishcraftJadeSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistEmbellishcraftJadeSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistEmbellishcraftJadeSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftJadeSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistEmbellishcraftJadeSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Larvikite Soulium Ore (Embellishcraft)").push("embellishcraft_larvikite_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistEmbellishcraftLarvikiteSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Soulium Ore (Embellishcraft)").push("embellishcraft_marble_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableEmbellishcraftMarbleSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeEmbellishcraftMarbleSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkEmbellishcraftMarbleSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightEmbellishcraftMarbleSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightEmbellishcraftMarbleSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistEmbellishcraftMarbleSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistEmbellishcraftMarbleSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftMarbleSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistEmbellishcraftMarbleSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Soulium Ore (Embellishcraft)").push("embellishcraft_slate_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableEmbellishcraftSlateSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeEmbellishcraftSlateSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkEmbellishcraftSlateSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightEmbellishcraftSlateSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightEmbellishcraftSlateSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistEmbellishcraftSlateSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistEmbellishcraftSlateSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftSlateSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistEmbellishcraftSlateSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        // Danny's Stone Variants
        BUILDER.comment("Hardened Stone Soulium Ore").push("hardened_stone_soulium_ore");
        BUILDER.comment("Generation settings for this ore.").push("generation");
        enableHardenedStoneSouliumOre = BUILDER.comment("If false, this ore variant will not generate.").define("enableVariant", true);
        veinSizeHardenedStoneSouliumOre = BUILDER.comment("The amount of ores in one vein.").defineInRange("veinSize", 6, 0, 65536);
        veinsPerChunkHardenedStoneSouliumOre = BUILDER.comment("How many veins per chunk.").defineInRange("veinsPerChunk", 2, 0, 65536);
        minHeightHardenedStoneSouliumOre = BUILDER.comment("The min y-level the ore will generate.").defineInRange("minHeight", 0, 0, 256);
        maxHeightHardenedStoneSouliumOre = BUILDER.comment("The max y-level the ore will generate.").defineInRange("maxHeight", 32, 0, 256);
        isTempWhitelistHardenedStoneSouliumOre = BUILDER.comment("If true, the biome temperature blacklist is a whitelist.").define("isTempWhitelist", false);
        temperatureBlacklistHardenedStoneSouliumOre = BUILDER.comment("Possible Entries: \"MEDIUM\", \"WARM\", \"COLD\", \"OCEAN\"").define("temperatureBlacklist", new ArrayList<String>());
        isBiomeWhitelistHardenedStoneSouliumOre = BUILDER.comment("If true, the biome blacklist is a whitelist.").define("isBiomeWhitelist", false);
        biomeBlacklistHardenedStoneSouliumOre = BUILDER.comment("Syntax: \"modid:biome\". E.g.: [\"minecraft:plains\", \"biomesoplenty:alps\"])").define("biomeBlacklist", new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.pop();
        spec = BUILDER.build();
        //BUILDER.comment("").push("");
        //
        //BUILDER.pop();
    }

    public static void loadConfig() {
        ModLoadingContext.get().registerConfig(ModConfig.Type.COMMON, Soulium.spec, Main.MOD_ID + "/soulium.toml");
    }
}
