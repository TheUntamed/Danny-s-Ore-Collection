package com.danny.dannys_ores.configs.poor_ores.gems;

import com.danny.dannys_ores.util.PathHandler;
import com.danny.dannys_ores.util.CommentHandler;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.config.ModConfig;

import java.util.ArrayList;
import java.util.List;

public class PoorProsperity {
    private static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec spec;
    public static ForgeConfigSpec.BooleanValue disablePoorProsperityOres;

    // StonePoor
    public static ForgeConfigSpec.BooleanValue enableStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightStonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistStonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistStonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistStonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistStonePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableAndesitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeAndesitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkAndesitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightAndesitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightAndesitePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistAndesitePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistAndesitePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistAndesitePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistAndesitePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableDioritePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeDioritePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkDioritePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightDioritePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightDioritePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistDioritePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistDioritePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistDioritePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistDioritePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableGranitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeGranitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGranitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightGranitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightGranitePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGranitePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGranitePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGranitePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGranitePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistNetherrackPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistNetherrackPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableEndStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeEndStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEndStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightEndStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightEndStonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEndStonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEndStonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEndStonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEndStonePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightSandPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableGravelPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeGravelPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGravelPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightGravelPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightGravelPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGravelPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGravelPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGravelPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGravelPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightSandstonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandstonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandstonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandstonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandstonePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandstonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandstonePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBlueIcePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBlueIcePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enablePackedIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizePackedIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkPackedIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightPackedIcePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightPackedIcePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistPackedIcePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistPackedIcePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistPackedIcePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistPackedIcePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableBedrockPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeBedrockPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBedrockPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightBedrockPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightBedrockPoorProsperityOre;
    public static ForgeConfigSpec.DoubleValue resistanceBedrockPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBedrockPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBedrockPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBedrockPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBedrockPoorProsperityOre;

    // Quark
    public static ForgeConfigSpec.BooleanValue enableQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkBasaltPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkBasaltPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkLimestonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkLimestonePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkJasperPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkJasperPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkMarblePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkMarblePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkSlatePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkSlatePoorProsperityOre;

    // Embellishcraft
    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftBasaltPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftBasaltPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftGneissPoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftGneissPoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftJadePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftJadePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftMarblePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftMarblePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftLarvikitePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftLarvikitePoorProsperityOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftSlatePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftSlatePoorProsperityOre;

    // Danny's Stone Poor Variants
    public static ForgeConfigSpec.BooleanValue enableHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinSizeHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue minHeightHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.IntValue maxHeightHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistHardenedStonePoorProsperityOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistHardenedStonePoorProsperityOre;

    static {
        // = BUILDER.comment("").define("", false);

        BUILDER.comment("Poor Prosperity Ores").push(PathHandler.getGeneralPath());
        disablePoorProsperityOres = BUILDER.comment(CommentHandler.getDisableAllVariantsComment()).define(PathHandler.getDisableAllVariantsPath(), false);
        BUILDER.comment("Stone Poor Prosperity Ore").push("stone_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableStonePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeStonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkStonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightStonePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightStonePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistStonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistStonePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistStonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistStonePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Andesite Poor Prosperity Ore").push("andesite_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistAndesitePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Diorite Poor Prosperity Ore").push("diorite_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistDioritePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Granite Poor Prosperity Ore").push("granite_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGranitePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Netherrack Poor Prosperity Ore").push("netherrack_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistNetherrackPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("End Stone Poor Prosperity Ore").push("end_stone_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEndStonePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sand Poor Prosperity Ore").push("sand_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkSandPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightSandPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sand Poor Prosperity Ore").push("red_sand_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gravel Poor Prosperity Ore").push("gravel_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGravelPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sandstone Poor Prosperity Ore").push("sandstone_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sandstone Poor Prosperity Ore").push("red_sandstone_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandstonePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Blue Ice Poor Prosperity Ore").push("blue_ice_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBlueIcePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Packed Ice Poor Prosperity Ore").push("packed_ice_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enablePackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizePackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkPackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightPackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightPackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistPackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistPackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistPackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistPackedIcePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Bedrock Poor Prosperity Ore").push("bedrock_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 1, 0, 65536);
        veinsPerChunkBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 256, 0, 256);
        isTempWhitelistBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.comment(CommentHandler.getPropertiesComment()).push(PathHandler.getPropertiesPath());
        resistanceBedrockPoorProsperityOre = BUILDER.comment(CommentHandler.getResistanceComment()).defineInRange(PathHandler.getResistancePath(), 9.0, 0.0, 3600000.0);
        BUILDER.pop();
        BUILDER.pop();

        //Quark
        BUILDER.comment("Basalt Poor Prosperity Ore (Quark)").push("quark_basalt_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 6, 0, 65536);
        minHeightQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Lime Stone Poor Prosperity Ore (Quark)").push("quark_limestone_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkLimestonePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jasper Poor Prosperity Ore (Quark)").push("quark_jasper_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkJasperPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Poor Prosperity Ore (Quark)").push("quark_marble_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Poor Prosperity Ore (Quark)").push("quark_slate_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        //Embellishcraft
        BUILDER.comment("Basalt Poor Prosperity Ore (Embellishcraft)").push("embellishcraft_basalt_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftBasaltPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gneiss Poor Prosperity Ore (Embellishcraft)").push("embellishcraft_gneiss_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftGneissPoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jade Poor Prosperity Ore (Embellishcraft)").push("embellishcraft_jade_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftJadePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Larvikite Poor Prosperity Ore (Embellishcraft)").push("embellishcraft_larvikite_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftLarvikitePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Poor Prosperity Ore (Embellishcraft)").push("embellishcraft_marble_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftMarblePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Poor Prosperity Ore (Embellishcraft)").push("embellishcraft_slate_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftSlatePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        // Danny's Stone Poor Variants
        BUILDER.comment("Hardened Stone Poor Prosperity Ore").push("hardened_stone_poor_prosperity_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 12, 0, 65536);
        minHeightHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 48, 0, 256);
        isTempWhitelistHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistHardenedStonePoorProsperityOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.pop();
        spec = BUILDER.build();
        //BUILDER.comment("").push("");
        //
        //BUILDER.pop();
    }

    public static void loadConfig(String path) {
        ModLoadingContext.get().registerConfig(ModConfig.Type.COMMON, PoorProsperity.spec, path + "/poor_prosperity.toml");
    }
}
