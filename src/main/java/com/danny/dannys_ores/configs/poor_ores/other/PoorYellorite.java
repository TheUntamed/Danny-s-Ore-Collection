package com.danny.dannys_ores.configs.poor_ores.other;

import com.danny.dannys_ores.util.PathHandler;
import com.danny.dannys_ores.util.CommentHandler;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.config.ModConfig;

import java.util.ArrayList;
import java.util.List;

public class PoorYellorite {
    private static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec spec;
    public static ForgeConfigSpec.BooleanValue disablePoorYelloriteOres;
    public static ForgeConfigSpec.BooleanValue disablePoorPoisonEffectYelloriteOres;
    public static ForgeConfigSpec.BooleanValue onlyWhileSelectedYelloriteOres;
    public static ForgeConfigSpec.IntValue durationPoisonEffectYelloriteOres;
    public static ForgeConfigSpec.IntValue effectLevelYelloriteOres;

    public static ForgeConfigSpec.BooleanValue enableStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightStonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistStonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistStonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistStonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistStonePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistAndesitePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistAndesitePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableDioritePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeDioritePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkDioritePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightDioritePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightDioritePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistDioritePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistDioritePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistDioritePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistDioritePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableGranitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeGranitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGranitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightGranitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightGranitePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGranitePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGranitePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGranitePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGranitePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistNetherrackPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistNetherrackPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEndStonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEndStonePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightSandPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableGravelPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeGravelPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGravelPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightGravelPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightGravelPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGravelPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGravelPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGravelPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGravelPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandstonePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandstonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandstonePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBlueIcePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBlueIcePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enablePackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizePackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkPackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightPackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightPackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistPackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistPackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistPackedIcePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistPackedIcePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.DoubleValue resistanceBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBedrockPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBedrockPoorYelloriteOre;

    // Quark
    public static ForgeConfigSpec.BooleanValue enableQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkBasaltPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkLimestonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkLimestonePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkJasperPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkJasperPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkMarblePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkMarblePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkSlatePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkSlatePoorYelloriteOre;

    // Embellishcraft
    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftBasaltPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftBasaltPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftGneissPoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftGneissPoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftJadePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftJadePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftMarblePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftMarblePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftLarvikitePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftLarvikitePoorYelloriteOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftSlatePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftSlatePoorYelloriteOre;

    // Danny's Stone Poor Variants
    public static ForgeConfigSpec.BooleanValue enableHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinSizeHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue minHeightHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.IntValue maxHeightHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistHardenedStonePoorYelloriteOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistHardenedStonePoorYelloriteOre;

    static {
        // = BUILDER.comment("").define("", false);

        BUILDER.comment("Poor Yellorite Ores").push(PathHandler.getGeneralPath());
        disablePoorYelloriteOres = BUILDER.comment(CommentHandler.getDisableAllVariantsComment()).define(PathHandler.getDisableAllVariantsPath(), false);
        disablePoorPoisonEffectYelloriteOres = BUILDER.comment("If true, poor yellorite ores will not poison players while in their inventory/hand.").define("disablePoisonEffect", false);
        onlyWhileSelectedYelloriteOres = BUILDER.comment("If true, a player will only be poisoned while holding the ore in a hand. If false, it just has to be in the inventory.").define(PathHandler.getOnlyWhileSelectedPath(), false);
        durationPoisonEffectYelloriteOres = BUILDER.comment("How long the effect will last (in ticks) after removing the ore from the inventory/hand. While in hand/inventory the timer will refresh.").defineInRange(PathHandler.getEffectDurationPath(), 25, 25, 1000000);
        effectLevelYelloriteOres = BUILDER.comment("The strength of the effect.").defineInRange("effectLevel", 1, 1, 2);
        BUILDER.comment("Stone Poor Yellorite Ore").push("stone_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Andesite Poor Yellorite Ore").push("andesite_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistAndesitePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Diorite Poor Yellorite Ore").push("diorite_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistDioritePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Granite Poor Yellorite Ore").push("granite_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGranitePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Netherrack Poor Yellorite Ore").push("netherrack_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 64, 0, 256);
        maxHeightNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistNetherrackPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("End Stone Poor Yellorite Ore").push("end_stone_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 64, 0, 256);
        isTempWhitelistEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEndStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sand Poor Yellorite Ore").push("sand_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sand Poor Yellorite Ore").push("red_sand_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gravel Poor Yellorite Ore").push("gravel_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGravelPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sandstone Poor Yellorite Ore").push("sandstone_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sandstone Poor Yellorite Ore").push("red_sandstone_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandstonePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Blue Ice Poor Yellorite Ore").push("blue_ice_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBlueIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Packed Ice Poor Yellorite Ore").push("packed_ice_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enablePackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizePackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkPackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightPackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightPackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistPackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistPackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistPackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistPackedIcePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Bedrock Poor Yellorite Ore").push("bedrock_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 1, 0, 65536);
        veinsPerChunkBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.comment(CommentHandler.getPropertiesComment()).push(PathHandler.getPropertiesPath());
        resistanceBedrockPoorYelloriteOre = BUILDER.comment(CommentHandler.getResistanceComment()).defineInRange(PathHandler.getResistancePath(), 9.0, 0.0, 3600000.0);
        BUILDER.pop();
        BUILDER.pop();

        //Quark
        BUILDER.comment("Basalt Poor Yellorite Ore (Quark)").push("quark_basalt_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 5, 0, 65536);
        veinsPerChunkQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 64, 0, 256);
        maxHeightQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Lime Stone Poor Yellorite Ore (Quark)").push("quark_limestone_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkLimestonePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jasper Poor Yellorite Ore (Quark)").push("quark_jasper_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkJasperPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Poor Yellorite Ore (Quark)").push("quark_marble_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Poor Yellorite Ore (Quark)").push("quark_slate_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        //Embellishcraft
        BUILDER.comment("Basalt Poor Yellorite Ore (Embellishcraft)").push("embellishcraft_basalt_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftBasaltPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gneiss Poor Yellorite Ore (Embellishcraft)").push("embellishcraft_gneiss_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftGneissPoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jade Poor Yellorite Ore (Embellishcraft)").push("embellishcraft_jade_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftJadePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Larvikite Poor Yellorite Ore (Embellishcraft)").push("embellishcraft_larvikite_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftLarvikitePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Poor Yellorite Ore (Embellishcraft)").push("embellishcraft_marble_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftMarblePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Poor Yellorite Ore (Embellishcraft)").push("embellishcraft_slate_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftSlatePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        // Danny's Stone Poor Variants
        BUILDER.comment("Hardened Stone Poor Yellorite Ore").push("hardened_stone_poor_yellorite_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 9, 0, 65536);
        veinsPerChunkHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 2, 0, 65536);
        minHeightHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistHardenedStonePoorYelloriteOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.pop();
        spec = BUILDER.build();
        //BUILDER.comment("").push("");
        //
        //BUILDER.pop();
    }

    public static void loadConfig(String path) {
        ModLoadingContext.get().registerConfig(ModConfig.Type.COMMON, PoorYellorite.spec, path + "/poor_yellorite.toml");
    }
}
