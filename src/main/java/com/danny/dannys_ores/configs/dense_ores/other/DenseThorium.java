package com.danny.dannys_ores.configs.dense_ores.other;

import com.danny.dannys_ores.util.PathHandler;
import com.danny.dannys_ores.util.CommentHandler;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.config.ModConfig;

import java.util.ArrayList;
import java.util.List;

public class DenseThorium {
    private static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec spec;
    public static ForgeConfigSpec.BooleanValue disableDenseThoriumOres;

    public static ForgeConfigSpec.BooleanValue enableStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightStoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistStoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistStoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistStoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistStoneDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistAndesiteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistAndesiteDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableDioriteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeDioriteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkDioriteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightDioriteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightDioriteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistDioriteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistDioriteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistDioriteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistDioriteDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableGraniteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeGraniteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGraniteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightGraniteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightGraniteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGraniteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGraniteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGraniteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGraniteDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistNetherrackDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistNetherrackDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEndStoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEndStoneDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightSandDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableGravelDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeGravelDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGravelDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightGravelDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightGravelDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGravelDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGravelDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGravelDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGravelDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandstoneDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandstoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandstoneDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBlueIceDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBlueIceDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enablePackedIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizePackedIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkPackedIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightPackedIceDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightPackedIceDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistPackedIceDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistPackedIceDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistPackedIceDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistPackedIceDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableBedrockDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeBedrockDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBedrockDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightBedrockDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightBedrockDenseThoriumOre;
    public static ForgeConfigSpec.DoubleValue resistanceBedrockDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBedrockDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBedrockDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBedrockDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBedrockDenseThoriumOre;

    // Quark
    public static ForgeConfigSpec.BooleanValue enableQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkBasaltDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkBasaltDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkLimestoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkLimestoneDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkJasperDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkJasperDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkMarbleDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkMarbleDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkSlateDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkSlateDenseThoriumOre;

    // Embellishcraft
    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftBasaltDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftBasaltDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftGneissDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftGneissDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftJadeDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftJadeDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftMarbleDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftMarbleDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftLarvikiteDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftLarvikiteDenseThoriumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftSlateDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftSlateDenseThoriumOre;

    // Danny's Stone Dense Variants
    public static ForgeConfigSpec.BooleanValue enableHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinSizeHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue minHeightHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.IntValue maxHeightHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistHardenedStoneDenseThoriumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistHardenedStoneDenseThoriumOre;

    static {
        // = BUILDER.comment("").define("", false);

        BUILDER.comment("Dense Thorium Ores").push(PathHandler.getGeneralPath());
        disableDenseThoriumOres = BUILDER.comment(CommentHandler.getDisableAllVariantsComment()).define(PathHandler.getDisableAllVariantsPath(), false);
        BUILDER.comment("Stone Dense Thorium Ore").push("stone_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Andesite Dense Thorium Ore").push("andesite_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistAndesiteDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Diorite Dense Thorium Ore").push("diorite_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistDioriteDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Granite Dense Thorium Ore").push("granite_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGraniteDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Netherrack Dense Thorium Ore").push("netherrack_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 96, 0, 256);
        isTempWhitelistNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistNetherrackDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("End Stone Dense Thorium Ore").push("end_stone_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEndStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sand Dense Thorium Ore").push("sand_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkSandDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightSandDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sand Dense Thorium Ore").push("red_sand_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gravel Dense Thorium Ore").push("gravel_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGravelDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sandstone Dense Thorium Ore").push("sandstone_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sandstone Dense Thorium Ore").push("red_sandstone_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandstoneDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Blue Ice Dense Thorium Ore").push("blue_ice_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBlueIceDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Packed Ice Dense Thorium Ore").push("packed_ice_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enablePackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizePackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkPackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightPackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightPackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistPackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistPackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistPackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistPackedIceDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Bedrock Dense Thorium Ore").push("bedrock_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 1, 0, 65536);
        veinsPerChunkBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.comment(CommentHandler.getPropertiesComment()).push(PathHandler.getPropertiesPath());
        resistanceBedrockDenseThoriumOre = BUILDER.comment(CommentHandler.getResistanceComment()).defineInRange(PathHandler.getResistancePath(), 9.0, 0.0, 3600000.0);
        BUILDER.pop();
        BUILDER.pop();

        //Quark
        BUILDER.comment("Basalt Dense Thorium Ore (Quark)").push("quark_basalt_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 96, 0, 256);
        isTempWhitelistQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Lime Stone Dense Thorium Ore (Quark)").push("quark_limestone_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkLimestoneDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jasper Dense Thorium Ore (Quark)").push("quark_jasper_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkJasperDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense Thorium Ore (Quark)").push("quark_marble_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense Thorium Ore (Quark)").push("quark_slate_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        //Embellishcraft
        BUILDER.comment("Basalt Dense Thorium Ore (Embellishcraft)").push("embellishcraft_basalt_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftBasaltDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gneiss Dense Thorium Ore (Embellishcraft)").push("embellishcraft_gneiss_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftGneissDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jade Dense Thorium Ore (Embellishcraft)").push("embellishcraft_jade_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftJadeDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Larvikite Dense Thorium Ore (Embellishcraft)").push("embellishcraft_larvikite_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftLarvikiteDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense Thorium Ore (Embellishcraft)").push("embellishcraft_marble_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftMarbleDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense Thorium Ore (Embellishcraft)").push("embellishcraft_slate_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftSlateDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        // Danny's Stone Dense Variants
        BUILDER.comment("Hardened Stone Dense Thorium Ore").push("hardened_stone_dense_thorium_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 3, 0, 65536);
        veinsPerChunkHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 3, 0, 65536);
        minHeightHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistHardenedStoneDenseThoriumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.pop();
        spec = BUILDER.build();
        //BUILDER.comment("").push("");
        //
        //BUILDER.pop();
    }

    public static void loadConfig(String path) {
        ModLoadingContext.get().registerConfig(ModConfig.Type.COMMON, DenseThorium.spec, path + "/dense_thorium.toml");
    }
}
