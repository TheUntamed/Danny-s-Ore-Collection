package com.danny.dannys_ores.configs.dense_ores.gems;

import com.danny.dannys_ores.util.PathHandler;
import com.danny.dannys_ores.util.CommentHandler;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.config.ModConfig;

import java.util.ArrayList;
import java.util.List;

public class DenseCertusQuartz {
    private static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec spec;
    public static ForgeConfigSpec.BooleanValue disableDenseCertusQuartzOres;

    public static ForgeConfigSpec.BooleanValue enableStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistStoneDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistAndesiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistAndesiteDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistDioriteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistDioriteDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGraniteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGraniteDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistNetherrackDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistNetherrackDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEndStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEndStoneDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGravelDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGravelDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandstoneDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandstoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandstoneDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBlueIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBlueIceDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enablePackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizePackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkPackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightPackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightPackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistPackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistPackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistPackedIceDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistPackedIceDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.DoubleValue resistanceBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBedrockDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBedrockDenseCertusQuartzOre;

    // Quark
    public static ForgeConfigSpec.BooleanValue enableQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkBasaltDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkLimestoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkLimestoneDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkJasperDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkJasperDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkMarbleDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkSlateDenseCertusQuartzOre;

    // Embellishcraft
    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftBasaltDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftBasaltDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftGneissDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftGneissDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftJadeDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftJadeDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftMarbleDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftMarbleDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftLarvikiteDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftLarvikiteDenseCertusQuartzOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftSlateDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftSlateDenseCertusQuartzOre;

    // Danny's Stone Dense Variants
    public static ForgeConfigSpec.BooleanValue enableHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinSizeHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue minHeightHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.IntValue maxHeightHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistHardenedStoneDenseCertusQuartzOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistHardenedStoneDenseCertusQuartzOre;

    static {
        // = BUILDER.comment("").define("", false);

        BUILDER.comment("Dense Certus Quartz Ores").push(PathHandler.getGeneralPath());
        disableDenseCertusQuartzOres = BUILDER.comment(CommentHandler.getDisableAllVariantsComment()).define(PathHandler.getDisableAllVariantsPath(), false);
        BUILDER.comment("Stone Dense Certus Quartz Ore").push("stone_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Andesite Dense Certus Quartz Ore").push("andesite_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistAndesiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Diorite Dense Certus Quartz Ore").push("diorite_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistDioriteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Granite Dense Certus Quartz Ore").push("granite_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGraniteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Netherrack Dense Certus Quartz Ore").push("netherrack_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 96, 0, 256);
        isTempWhitelistNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistNetherrackDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("End Stone Dense Certus Quartz Ore").push("end_stone_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEndStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sand Dense Certus Quartz Ore").push("sand_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sand Dense Certus Quartz Ore").push("red_sand_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gravel Dense Certus Quartz Ore").push("gravel_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGravelDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sandstone Dense Certus Quartz Ore").push("sandstone_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sandstone Dense Certus Quartz Ore").push("red_sandstone_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandstoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Blue Ice Dense Certus Quartz Ore").push("blue_ice_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBlueIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Packed Ice Dense Certus Quartz Ore").push("packed_ice_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enablePackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizePackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkPackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightPackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightPackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistPackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistPackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistPackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistPackedIceDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Bedrock Dense Certus Quartz Ore").push("bedrock_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 1, 0, 65536);
        veinsPerChunkBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.comment(CommentHandler.getPropertiesComment()).push(PathHandler.getPropertiesPath());
        resistanceBedrockDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getResistanceComment()).defineInRange(PathHandler.getResistancePath(), 9.0, 0.0, 3600000.0);
        BUILDER.pop();
        BUILDER.pop();

        //Quark
        BUILDER.comment("Basalt Dense CertusQuartz Ore (Quark)").push("quark_basalt_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 2, 0, 65536);
        veinsPerChunkQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 8, 0, 65536);
        minHeightQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 96, 0, 256);
        isTempWhitelistQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Lime Stone Dense CertusQuartz Ore (Quark)").push("quark_limestone_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkLimestoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jasper Dense CertusQuartz Ore (Quark)").push("quark_jasper_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkJasperDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense CertusQuartz Ore (Quark)").push("quark_marble_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense CertusQuartz Ore (Quark)").push("quark_slate_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        //Embellishcraft
        BUILDER.comment("Basalt Dense CertusQuartz Ore (Embellishcraft)").push("embellishcraft_basalt_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftBasaltDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gneiss Dense CertusQuartz Ore (Embellishcraft)").push("embellishcraft_gneiss_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftGneissDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jade Dense CertusQuartz Ore (Embellishcraft)").push("embellishcraft_jade_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftJadeDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Larvikite Dense CertusQuartz Ore (Embellishcraft)").push("embellishcraft_larvikite_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftLarvikiteDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense CertusQuartz Ore (Embellishcraft)").push("embellishcraft_marble_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftMarbleDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense CertusQuartz Ore (Embellishcraft)").push("embellishcraft_slate_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftSlateDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        // Danny's Stone Dense Variants
        BUILDER.comment("Hardened Stone Dense Certus Quartz Ore").push("hardened_stone_dense_certus_quartz_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 15, 0, 65536);
        minHeightHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 32, 0, 256);
        maxHeightHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistHardenedStoneDenseCertusQuartzOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.pop();
        spec = BUILDER.build();
        //BUILDER.comment("").push("");
        //
        //BUILDER.pop();
    }

    public static void loadConfig(String path) {
        ModLoadingContext.get().registerConfig(ModConfig.Type.COMMON, DenseCertusQuartz.spec, path + "/dense_certus_quartz.toml");
    }
}
