package com.danny.dannys_ores.configs.dense_ores.other;

import com.danny.dannys_ores.util.PathHandler;
import com.danny.dannys_ores.util.CommentHandler;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.config.ModConfig;

import java.util.ArrayList;
import java.util.List;

public class DensePlatinum {
    private static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec spec;
    public static ForgeConfigSpec.BooleanValue disableDensePlatinumOres;

    public static ForgeConfigSpec.BooleanValue enableStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightStoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistStoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistStoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistStoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistStoneDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistAndesiteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistAndesiteDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableDioriteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeDioriteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkDioriteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightDioriteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightDioriteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistDioriteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistDioriteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistDioriteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistDioriteDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableGraniteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeGraniteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGraniteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightGraniteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightGraniteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGraniteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGraniteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGraniteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGraniteDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistNetherrackDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistNetherrackDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEndStoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEndStoneDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightSandDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableGravelDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeGravelDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGravelDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightGravelDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightGravelDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGravelDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGravelDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGravelDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGravelDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandstoneDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandstoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandstoneDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBlueIceDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBlueIceDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enablePackedIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizePackedIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkPackedIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightPackedIceDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightPackedIceDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistPackedIceDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistPackedIceDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistPackedIceDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistPackedIceDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableBedrockDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeBedrockDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBedrockDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightBedrockDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightBedrockDensePlatinumOre;
    public static ForgeConfigSpec.DoubleValue resistanceBedrockDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBedrockDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBedrockDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBedrockDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBedrockDensePlatinumOre;

    // Quark
    public static ForgeConfigSpec.BooleanValue enableQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkBasaltDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkBasaltDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkLimestoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkLimestoneDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkJasperDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkJasperDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkMarbleDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkMarbleDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkSlateDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkSlateDensePlatinumOre;

    // Embellishcraft
    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftBasaltDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftBasaltDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftGneissDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftGneissDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftJadeDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftJadeDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftMarbleDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftMarbleDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftLarvikiteDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftLarvikiteDensePlatinumOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftSlateDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftSlateDensePlatinumOre;

    // Danny's Stone Dense Variants
    public static ForgeConfigSpec.BooleanValue enableHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinSizeHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue minHeightHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.IntValue maxHeightHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistHardenedStoneDensePlatinumOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistHardenedStoneDensePlatinumOre;

    static {
        // = BUILDER.comment("").define("", false);

        BUILDER.comment("Dense Platinum Ores").push(PathHandler.getGeneralPath());
        disableDensePlatinumOres = BUILDER.comment(CommentHandler.getDisableAllVariantsComment()).define(PathHandler.getDisableAllVariantsPath(), false);
        BUILDER.comment("Stone Dense Platinum Ore").push("stone_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Andesite Dense Platinum Ore").push("andesite_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistAndesiteDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Diorite Dense Platinum Ore").push("diorite_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistDioriteDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Granite Dense Platinum Ore").push("granite_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGraniteDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Netherrack Dense Platinum Ore").push("netherrack_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 96, 0, 256);
        maxHeightNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistNetherrackDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("End Stone Dense Platinum Ore").push("end_stone_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 32, 0, 256);
        isTempWhitelistEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEndStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sand Dense Platinum Ore").push("sand_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkSandDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightSandDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sand Dense Platinum Ore").push("red_sand_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gravel Dense Platinum Ore").push("gravel_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGravelDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sandstone Dense Platinum Ore").push("sandstone_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sandstone Dense Platinum Ore").push("red__sandstone_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandstoneDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Blue Ice Dense Platinum Ore").push("blue_ice_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBlueIceDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Packed Ice Dense Platinum Ore").push("packed_ice_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enablePackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizePackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkPackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightPackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightPackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistPackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistPackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistPackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistPackedIceDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Bedrock Dense Platinum Ore").push("bedrock_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 1, 0, 65536);
        veinsPerChunkBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 256, 0, 256);
        isTempWhitelistBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.comment(CommentHandler.getPropertiesComment()).push(PathHandler.getPropertiesPath());
        resistanceBedrockDensePlatinumOre = BUILDER.comment(CommentHandler.getResistanceComment()).defineInRange(PathHandler.getResistancePath(), 9.0, 0.0, 3600000.0);
        BUILDER.pop();
        BUILDER.pop();

        //Quark
        BUILDER.comment("Basalt Dense Platinum Ore (Quark)").push("quark_basalt_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 96, 0, 256);
        maxHeightQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Lime Stone Dense Platinum Ore (Quark)").push("quark_limestone_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkLimestoneDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jasper Dense Platinum Ore (Quark)").push("quark_jasper_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkJasperDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense Platinum Ore (Quark)").push("quark_marble_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense Platinum Ore (Quark)").push("quark_slate_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        //Embellishcraft
        BUILDER.comment("Basalt Dense Platinum Ore (Embellishcraft)").push("embellishcraft_basalt_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftBasaltDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gneiss Dense Platinum Ore (Embellishcraft)").push("embellishcraft_gneiss_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftGneissDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jade Dense Platinum Ore (Embellishcraft)").push("embellishcraft_jade_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftJadeDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Larvikite Dense Platinum Ore (Embellishcraft)").push("embellishcraft_larvikite_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftLarvikiteDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense Platinum Ore (Embellishcraft)").push("embellishcraft_marble_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftMarbleDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense Platinum Ore (Embellishcraft)").push("embellishcraft_slate_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftSlateDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        // Danny's Stone Dense Variants
        BUILDER.comment("Hardened Stone Dense Platinum Ore").push("hardened_stone_dense_platinum_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 8, 0, 65536);
        veinsPerChunkHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 16, 0, 256);
        isTempWhitelistHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistHardenedStoneDensePlatinumOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.pop();
        spec = BUILDER.build();
        //BUILDER.comment("").push("");
        //
        //BUILDER.pop();
    }

    public static void loadConfig(String path) {
        ModLoadingContext.get().registerConfig(ModConfig.Type.COMMON, DensePlatinum.spec, path + "/dense_platinum.toml");
    }
}
