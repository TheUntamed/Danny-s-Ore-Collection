package com.danny.dannys_ores.configs.dense_ores.other;

import com.danny.dannys_ores.util.PathHandler;
import com.danny.dannys_ores.util.CommentHandler;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.fml.config.ModConfig;

import java.util.ArrayList;
import java.util.List;

public class DenseGalena {
    private static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec spec;
    public static ForgeConfigSpec.BooleanValue disableDenseGalenaOres;

    public static ForgeConfigSpec.BooleanValue enableStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightStoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistStoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistStoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistStoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistStoneDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistAndesiteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistAndesiteDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableDioriteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeDioriteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkDioriteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightDioriteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightDioriteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistDioriteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistDioriteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistDioriteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistDioriteDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableGraniteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeGraniteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGraniteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightGraniteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightGraniteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGraniteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGraniteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGraniteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGraniteDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistNetherrackDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistNetherrackDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEndStoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEndStoneDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightSandDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableGravelDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeGravelDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkGravelDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightGravelDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightGravelDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistGravelDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistGravelDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistGravelDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistGravelDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistSandstoneDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistRedSandstoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistRedSandstoneDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBlueIceDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBlueIceDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enablePackedIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizePackedIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkPackedIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightPackedIceDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightPackedIceDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistPackedIceDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistPackedIceDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistPackedIceDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistPackedIceDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableBedrockDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeBedrockDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkBedrockDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightBedrockDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightBedrockDenseGalenaOre;
    public static ForgeConfigSpec.DoubleValue resistanceBedrockDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistBedrockDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistBedrockDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistBedrockDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistBedrockDenseGalenaOre;

    // Quark
    public static ForgeConfigSpec.BooleanValue enableQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkBasaltDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkBasaltDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkLimestoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkLimestoneDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkJasperDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkJasperDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkMarbleDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkMarbleDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistQuarkSlateDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistQuarkSlateDenseGalenaOre;

    // Embellishcraft
    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftBasaltDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftBasaltDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftGneissDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftGneissDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftJadeDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftJadeDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftMarbleDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftMarbleDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftLarvikiteDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftLarvikiteDenseGalenaOre;

    public static ForgeConfigSpec.BooleanValue enableEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistEmbellishcraftSlateDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistEmbellishcraftSlateDenseGalenaOre;

    // Danny's Stone Dense Variants
    public static ForgeConfigSpec.BooleanValue enableHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinSizeHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue veinsPerChunkHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue minHeightHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.IntValue maxHeightHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isTempWhitelistHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> temperatureBlacklistHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.BooleanValue isBiomeWhitelistHardenedStoneDenseGalenaOre;
    public static ForgeConfigSpec.ConfigValue<List<String>> biomeBlacklistHardenedStoneDenseGalenaOre;

    static {
        // = BUILDER.comment("").define("", false);

        BUILDER.comment("Dense Galena Ores").push(PathHandler.getGeneralPath());
        disableDenseGalenaOres = BUILDER.comment(CommentHandler.getDisableAllVariantsComment()).define(PathHandler.getDisableAllVariantsPath(), false);
        BUILDER.comment("Stone Dense Galena Ore").push("stone_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Andesite Dense Galena Ore").push("andesite_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistAndesiteDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Diorite Dense Galena Ore").push("diorite_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistDioriteDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Granite Dense Galena Ore").push("granite_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGraniteDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Netherrack Dense Galena Ore").push("netherrack_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 96, 0, 256);
        isTempWhitelistNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistNetherrackDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("End Stone Dense Galena Ore").push("end_stone_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEndStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sand Dense Galena Ore").push("sand_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkSandDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightSandDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sand Dense Galena Ore").push("red_sand_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gravel Dense Galena Ore").push("gravel_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistGravelDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Sandstone Dense Galena Ore").push("sandstone_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Red Sandstone Dense Galena Ore").push("red_sandstone_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistRedSandstoneDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Blue Ice Dense Galena Ore").push("blue_ice_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBlueIceDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Packed Ice Dense Galena Ore").push("packed_ice_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enablePackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizePackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkPackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightPackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightPackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 128, 0, 256);
        isTempWhitelistPackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistPackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistPackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistPackedIceDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Bedrock Dense Galena Ore").push("bedrock_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 1, 0, 65536);
        veinsPerChunkBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 1, 0, 65536);
        minHeightBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 256, 0, 256);
        isTempWhitelistBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.comment(CommentHandler.getPropertiesComment()).push(PathHandler.getPropertiesPath());
        resistanceBedrockDenseGalenaOre = BUILDER.comment(CommentHandler.getResistanceComment()).defineInRange(PathHandler.getResistancePath(), 9.0, 0.0, 3600000.0);
        BUILDER.pop();
        BUILDER.pop();

        //Quark
        BUILDER.comment("Basalt Dense Galena Ore (Quark)").push("quark_basalt_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 96, 0, 256);
        isTempWhitelistQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Lime Stone Dense Galena Ore (Quark)").push("quark_limestone_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkLimestoneDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jasper Dense Galena Ore (Quark)").push("quark_jasper_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkJasperDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense Galena Ore (Quark)").push("quark_marble_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense Galena Ore (Quark)").push("quark_slate_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistQuarkSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();

        //Embellishcraft
        BUILDER.comment("Basalt Dense Galena Ore (Embellishcraft)").push("embellishcraft_basalt_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftBasaltDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Gneiss Dense Galena Ore (Embellishcraft)").push("embellishcraft_gneiss_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftGneissDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Jade Dense Galena Ore (Embellishcraft)").push("embellishcraft_jade_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftJadeDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Larvikite Dense Galena Ore (Embellishcraft)").push("embellishcraft_larvikite_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftLarvikiteDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Marble Dense Galena Ore (Embellishcraft)").push("embellishcraft_marble_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftMarbleDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.comment("Slate Dense Galena Ore (Embellishcraft)").push("embellishcraft_slate_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistEmbellishcraftSlateDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        // Danny's Stone Dense Variants
        BUILDER.comment("Hardened Stone Dense Galena Ore").push("hardened_stone_dense_galena_ore");
        BUILDER.comment(CommentHandler.getGenerationComment()).push(PathHandler.getGenerationPath());
        enableHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getEnableVariantComment()).define(PathHandler.getEnableVariantPath(), true);
        veinSizeHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinSizeComment()).defineInRange(PathHandler.getVeinSizePath(), 4, 0, 65536);
        veinsPerChunkHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getVeinsPerChunkComment()).defineInRange(PathHandler.getVeinsPerChunkPath(), 4, 0, 65536);
        minHeightHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMinHeightComment()).defineInRange(PathHandler.getMinHeightPath(), 0, 0, 256);
        maxHeightHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getMaxHeightComment()).defineInRange(PathHandler.getMaxHeightPath(), 40, 0, 256);
        isTempWhitelistHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsTempWhitelistComment()).define(PathHandler.getIsTempWhitelistPath(), false);
        temperatureBlacklistHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getTemperatureBlacklistComment()).define(PathHandler.getTemperatureBlacklistPath(), new ArrayList<String>());
        isBiomeWhitelistHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getIsBiomeWhitelistComment()).define(PathHandler.getIsBiomeWhitelistPath(), false);
        biomeBlacklistHardenedStoneDenseGalenaOre = BUILDER.comment(CommentHandler.getBiomeBlacklistComment()).define(PathHandler.getBiomeBlacklistPath(), new ArrayList<String>());
        BUILDER.pop();
        BUILDER.pop();
        BUILDER.pop();
        spec = BUILDER.build();
        //BUILDER.comment("").push("");
        //
        //BUILDER.pop();
    }

    public static void loadConfig(String path) {
        ModLoadingContext.get().registerConfig(ModConfig.Type.COMMON, DenseGalena.spec, path + "/dense_galena.toml");
    }
}
